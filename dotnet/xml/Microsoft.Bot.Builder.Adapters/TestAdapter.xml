<Type Name="TestAdapter" FullName="Microsoft.Bot.Builder.Adapters.TestAdapter">
  <TypeSignature Language="C#" Value="public class TestAdapter : Microsoft.Bot.Builder.BotAdapter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TestAdapter extends Microsoft.Bot.Builder.BotAdapter" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Bot.Builder.Adapters.TestAdapter" />
  <TypeSignature Language="VB.NET" Value="Public Class TestAdapter&#xA;Inherits BotAdapter" />
  <TypeSignature Language="F#" Value="type TestAdapter = class&#xA;    inherit BotAdapter" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Bot.Builder.Core</AssemblyName>
    <AssemblyVersion>4.0.0.46</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.Bot.Builder.BotAdapter</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TestAdapter (Microsoft.Bot.Schema.ConversationReference reference = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.Bot.Schema.ConversationReference reference) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.Adapters.TestAdapter.#ctor(Microsoft.Bot.Schema.ConversationReference)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (Optional reference As ConversationReference = null)" />
      <MemberSignature Language="F#" Value="new Microsoft.Bot.Builder.Adapters.TestAdapter : Microsoft.Bot.Schema.ConversationReference -&gt; Microsoft.Bot.Builder.Adapters.TestAdapter" Usage="new Microsoft.Bot.Builder.Adapters.TestAdapter reference" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder.Core</AssemblyName>
        <AssemblyVersion>4.0.0.46</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="reference" Type="Microsoft.Bot.Schema.ConversationReference" />
      </Parameters>
      <Docs>
        <param name="reference">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ActiveQueue">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.Queue&lt;Microsoft.Bot.Schema.Activity&gt; ActiveQueue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.Queue`1&lt;class Microsoft.Bot.Schema.Activity&gt; ActiveQueue" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Bot.Builder.Adapters.TestAdapter.ActiveQueue" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ActiveQueue As Queue(Of Activity)" />
      <MemberSignature Language="F#" Value="member this.ActiveQueue : System.Collections.Generic.Queue&lt;Microsoft.Bot.Schema.Activity&gt;" Usage="Microsoft.Bot.Builder.Adapters.TestAdapter.ActiveQueue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder.Core</AssemblyName>
        <AssemblyVersion>4.0.0.46</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.Queue&lt;Microsoft.Bot.Schema.Activity&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConversationReference">
      <MemberSignature Language="C#" Value="public Microsoft.Bot.Schema.ConversationReference ConversationReference { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Bot.Schema.ConversationReference ConversationReference" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Bot.Builder.Adapters.TestAdapter.ConversationReference" />
      <MemberSignature Language="VB.NET" Value="Public Property ConversationReference As ConversationReference" />
      <MemberSignature Language="F#" Value="member this.ConversationReference : Microsoft.Bot.Schema.ConversationReference with get, set" Usage="Microsoft.Bot.Builder.Adapters.TestAdapter.ConversationReference" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder.Core</AssemblyName>
        <AssemblyVersion>4.0.0.46</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Bot.Schema.ConversationReference</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateConversation">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task CreateConversation (string channelId, Func&lt;Microsoft.Bot.Builder.ITurnContext,System.Threading.Tasks.Task&gt; callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task CreateConversation(string channelId, class System.Func`2&lt;class Microsoft.Bot.Builder.ITurnContext, class System.Threading.Tasks.Task&gt; callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.Adapters.TestAdapter.CreateConversation(System.String,System.Func{Microsoft.Bot.Builder.ITurnContext,System.Threading.Tasks.Task})" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CreateConversation (channelId As String, callback As Func(Of ITurnContext, Task)) As Task" />
      <MemberSignature Language="F#" Value="override this.CreateConversation : string * Func&lt;Microsoft.Bot.Builder.ITurnContext, System.Threading.Tasks.Task&gt; -&gt; System.Threading.Tasks.Task" Usage="testAdapter.CreateConversation (channelId, callback)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder.Core</AssemblyName>
        <AssemblyVersion>4.0.0.46</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="channelId" Type="System.String" />
        <Parameter Name="callback" Type="System.Func&lt;Microsoft.Bot.Builder.ITurnContext,System.Threading.Tasks.Task&gt;" />
      </Parameters>
      <Docs>
        <param name="channelId"></param>
        <param name="callback"></param>
        <summary>
            NOTE: this resets the queue, it doesn't actually maintain multiple converstion queues
            </summary>
        <returns />
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteActivity">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task DeleteActivity (Microsoft.Bot.Builder.ITurnContext context, Microsoft.Bot.Schema.ConversationReference reference);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task DeleteActivity(class Microsoft.Bot.Builder.ITurnContext context, class Microsoft.Bot.Schema.ConversationReference reference) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.Adapters.TestAdapter.DeleteActivity(Microsoft.Bot.Builder.ITurnContext,Microsoft.Bot.Schema.ConversationReference)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function DeleteActivity (context As ITurnContext, reference As ConversationReference) As Task" />
      <MemberSignature Language="F#" Value="override this.DeleteActivity : Microsoft.Bot.Builder.ITurnContext * Microsoft.Bot.Schema.ConversationReference -&gt; System.Threading.Tasks.Task" Usage="testAdapter.DeleteActivity (context, reference)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder.Core</AssemblyName>
        <AssemblyVersion>4.0.0.46</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Microsoft.Bot.Builder.ITurnContext" />
        <Parameter Name="reference" Type="Microsoft.Bot.Schema.ConversationReference" />
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <param name="reference">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNextReply">
      <MemberSignature Language="C#" Value="public Microsoft.Bot.Schema.IActivity GetNextReply ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Bot.Schema.IActivity GetNextReply() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.Adapters.TestAdapter.GetNextReply" />
      <MemberSignature Language="VB.NET" Value="Public Function GetNextReply () As IActivity" />
      <MemberSignature Language="F#" Value="member this.GetNextReply : unit -&gt; Microsoft.Bot.Schema.IActivity" Usage="testAdapter.GetNextReply " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder.Core</AssemblyName>
        <AssemblyVersion>4.0.0.46</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Bot.Schema.IActivity</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Called by TestFlow to check next reply
            </summary>
        <returns />
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MakeActivity">
      <MemberSignature Language="C#" Value="public Microsoft.Bot.Schema.Activity MakeActivity (string text = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Bot.Schema.Activity MakeActivity(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.Adapters.TestAdapter.MakeActivity(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function MakeActivity (Optional text As String = null) As Activity" />
      <MemberSignature Language="F#" Value="member this.MakeActivity : string -&gt; Microsoft.Bot.Schema.Activity" Usage="testAdapter.MakeActivity text" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder.Core</AssemblyName>
        <AssemblyVersion>4.0.0.46</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Bot.Schema.Activity</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text"></param>
        <summary>
            Called by TestFlow to get appropriate activity for conversationReference of testbot
            </summary>
        <returns />
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProcessActivity">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task ProcessActivity (Microsoft.Bot.Schema.Activity activity, Func&lt;Microsoft.Bot.Builder.ITurnContext,System.Threading.Tasks.Task&gt; callback, System.Threading.CancellationTokenSource cancelToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task ProcessActivity(class Microsoft.Bot.Schema.Activity activity, class System.Func`2&lt;class Microsoft.Bot.Builder.ITurnContext, class System.Threading.Tasks.Task&gt; callback, class System.Threading.CancellationTokenSource cancelToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.Adapters.TestAdapter.ProcessActivity(Microsoft.Bot.Schema.Activity,System.Func{Microsoft.Bot.Builder.ITurnContext,System.Threading.Tasks.Task},System.Threading.CancellationTokenSource)" />
      <MemberSignature Language="F#" Value="member this.ProcessActivity : Microsoft.Bot.Schema.Activity * Func&lt;Microsoft.Bot.Builder.ITurnContext, System.Threading.Tasks.Task&gt; * System.Threading.CancellationTokenSource -&gt; System.Threading.Tasks.Task" Usage="testAdapter.ProcessActivity (activity, callback, cancelToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder.Core</AssemblyName>
        <AssemblyVersion>4.0.0.46</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="activity" Type="Microsoft.Bot.Schema.Activity" />
        <Parameter Name="callback" Type="System.Func&lt;Microsoft.Bot.Builder.ITurnContext,System.Threading.Tasks.Task&gt;" />
        <Parameter Name="cancelToken" Type="System.Threading.CancellationTokenSource" />
      </Parameters>
      <Docs>
        <param name="activity">To be added.</param>
        <param name="callback">To be added.</param>
        <param name="cancelToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SendActivities">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task&lt;Microsoft.Bot.Schema.ResourceResponse[]&gt; SendActivities (Microsoft.Bot.Builder.ITurnContext context, Microsoft.Bot.Schema.Activity[] activities);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Bot.Schema.ResourceResponse[]&gt; SendActivities(class Microsoft.Bot.Builder.ITurnContext context, class Microsoft.Bot.Schema.Activity[] activities) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.Adapters.TestAdapter.SendActivities(Microsoft.Bot.Builder.ITurnContext,Microsoft.Bot.Schema.Activity[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function SendActivities (context As ITurnContext, activities As Activity()) As Task(Of ResourceResponse())" />
      <MemberSignature Language="F#" Value="override this.SendActivities : Microsoft.Bot.Builder.ITurnContext * Microsoft.Bot.Schema.Activity[] -&gt; System.Threading.Tasks.Task&lt;Microsoft.Bot.Schema.ResourceResponse[]&gt;" Usage="testAdapter.SendActivities (context, activities)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder.Core</AssemblyName>
        <AssemblyVersion>4.0.0.46</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Bot.Schema.ResourceResponse[]&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Microsoft.Bot.Builder.ITurnContext" />
        <Parameter Name="activities" Type="Microsoft.Bot.Schema.Activity[]" />
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <param name="activities">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SendTextToBot">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task SendTextToBot (string userSays, Func&lt;Microsoft.Bot.Builder.ITurnContext,System.Threading.Tasks.Task&gt; callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task SendTextToBot(string userSays, class System.Func`2&lt;class Microsoft.Bot.Builder.ITurnContext, class System.Threading.Tasks.Task&gt; callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.Adapters.TestAdapter.SendTextToBot(System.String,System.Func{Microsoft.Bot.Builder.ITurnContext,System.Threading.Tasks.Task})" />
      <MemberSignature Language="VB.NET" Value="Public Function SendTextToBot (userSays As String, callback As Func(Of ITurnContext, Task)) As Task" />
      <MemberSignature Language="F#" Value="member this.SendTextToBot : string * Func&lt;Microsoft.Bot.Builder.ITurnContext, System.Threading.Tasks.Task&gt; -&gt; System.Threading.Tasks.Task" Usage="testAdapter.SendTextToBot (userSays, callback)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder.Core</AssemblyName>
        <AssemblyVersion>4.0.0.46</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userSays" Type="System.String" />
        <Parameter Name="callback" Type="System.Func&lt;Microsoft.Bot.Builder.ITurnContext,System.Threading.Tasks.Task&gt;" />
      </Parameters>
      <Docs>
        <param name="userSays"></param>
        <param name="callback">To be added.</param>
        <summary>
            Called by TestFlow to send text to the bot
            </summary>
        <returns />
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateActivity">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task&lt;Microsoft.Bot.Schema.ResourceResponse&gt; UpdateActivity (Microsoft.Bot.Builder.ITurnContext context, Microsoft.Bot.Schema.Activity activity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Bot.Schema.ResourceResponse&gt; UpdateActivity(class Microsoft.Bot.Builder.ITurnContext context, class Microsoft.Bot.Schema.Activity activity) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.Adapters.TestAdapter.UpdateActivity(Microsoft.Bot.Builder.ITurnContext,Microsoft.Bot.Schema.Activity)" />
      <MemberSignature Language="F#" Value="override this.UpdateActivity : Microsoft.Bot.Builder.ITurnContext * Microsoft.Bot.Schema.Activity -&gt; System.Threading.Tasks.Task&lt;Microsoft.Bot.Schema.ResourceResponse&gt;" Usage="testAdapter.UpdateActivity (context, activity)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder.Core</AssemblyName>
        <AssemblyVersion>4.0.0.46</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Bot.Schema.ResourceResponse&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Microsoft.Bot.Builder.ITurnContext" />
        <Parameter Name="activity" Type="Microsoft.Bot.Schema.Activity" />
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <param name="activity">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Use">
      <MemberSignature Language="C#" Value="public Microsoft.Bot.Builder.Adapters.TestAdapter Use (Microsoft.Bot.Builder.IMiddleware middleware);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Bot.Builder.Adapters.TestAdapter Use(class Microsoft.Bot.Builder.IMiddleware middleware) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.Adapters.TestAdapter.Use(Microsoft.Bot.Builder.IMiddleware)" />
      <MemberSignature Language="VB.NET" Value="Public Function Use (middleware As IMiddleware) As TestAdapter" />
      <MemberSignature Language="F#" Value="override this.Use : Microsoft.Bot.Builder.IMiddleware -&gt; Microsoft.Bot.Builder.Adapters.TestAdapter" Usage="testAdapter.Use middleware" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder.Core</AssemblyName>
        <AssemblyVersion>4.0.0.46</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Bot.Builder.Adapters.TestAdapter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="middleware" Type="Microsoft.Bot.Builder.IMiddleware" />
      </Parameters>
      <Docs>
        <param name="middleware">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>