<Type Name="IBot" FullName="Microsoft.Bot.IBot">
  <TypeSignature Language="C#" Value="public interface IBot" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IBot" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Bot.IBot" />
  <TypeSignature Language="VB.NET" Value="Public Interface IBot" />
  <TypeSignature Language="F#" Value="type IBot = interface" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Bot.Builder.Core</AssemblyName>
    <AssemblyVersion>4.0.0.46</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>
            Represents a bot that can operate on incoming activities.
            </summary>
    <remarks>A <see cref="T:Microsoft.Bot.Builder.BotAdapter" /> passes incoming activities from the user's 
            channel to the bot's <see cref="M:Microsoft.Bot.IBot.OnTurn(Microsoft.Bot.Builder.ITurnContext)" /> method.</remarks>
    <example>
            This defines a bot that responds with "Hello world!" to any incoming message.
            <code>
            public class EchoBot : IBot
            {
                public async Task OnTurn(ITurnContext context)
                {
                    if (context.Activity.Type is ActivityTypes.Message)
                    {
                        await context.SendActivity("Hello world!");
                    }
                }
            }
            </code></example>
    <altmember cref="T:Microsoft.Bot.Builder.IMiddleware" />
  </Docs>
  <Members>
    <Member MemberName="OnTurn">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task OnTurn (Microsoft.Bot.Builder.ITurnContext turnContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task OnTurn(class Microsoft.Bot.Builder.ITurnContext turnContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.IBot.OnTurn(Microsoft.Bot.Builder.ITurnContext)" />
      <MemberSignature Language="VB.NET" Value="Public Function OnTurn (turnContext As ITurnContext) As Task" />
      <MemberSignature Language="F#" Value="abstract member OnTurn : Microsoft.Bot.Builder.ITurnContext -&gt; System.Threading.Tasks.Task" Usage="iBot.OnTurn turnContext" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder.Core</AssemblyName>
        <AssemblyVersion>4.0.0.46</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="turnContext" Type="Microsoft.Bot.Builder.ITurnContext" />
      </Parameters>
      <Docs>
        <param name="turnContext">The context object for this turn.</param>
        <summary>
            Handles an incoming activity.
            </summary>
        <returns>A task that represents the work queued to execute.</returns>
        <remarks>The <paramref name="turnContext" /> provides information about the 
            incoming activity, and other data needed to process the activity.</remarks>
        <altmember cref="T:Microsoft.Bot.Builder.ITurnContext" />
        <altmember cref="T:Microsoft.Bot.Schema.IActivity" />
      </Docs>
    </Member>
  </Members>
</Type>