<Type Name="PromptValidator&lt;R,O&gt;" FullName="Microsoft.Bot.Builder.Dialogs.PromptValidator&lt;R,O&gt;">
  <TypeSignature Language="C#" Value="public delegate System.Threading.Tasks.Task&lt;O&gt; PromptValidator&lt;R,O&gt;(TurnContext context, R value);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed PromptValidator`2&lt;R, O&gt; extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Bot.Builder.Dialogs.PromptValidator`2" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Function PromptValidator(Of R, O)(context As TurnContext, value As R) As Task(Of O) " />
  <TypeSignature Language="F#" Value="type PromptValidator&lt;'R, 'O&gt; = delegate of TurnContext * 'R -&gt; Task&lt;'O&gt;" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Bot.Builder.Dialogs</AssemblyName>
    <AssemblyVersion>4.0.0.46</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="R" />
    <TypeParameter Name="O" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Parameters>
    <Parameter Name="context" Type="Microsoft.Bot.Builder.TurnContext" />
    <Parameter Name="value" Type="R" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Threading.Tasks.Task&lt;O&gt;</ReturnType>
  </ReturnValue>
  <Docs>
    <typeparam name="R">To be added.</typeparam>
    <typeparam name="O">To be added.</typeparam>
    <param name="context">PromptValidator.context Context for the current turn of conversation.</param>
    <param name="value">PromptValidator.value The value that was recognized or `undefined` if not recognized.</param>
    <summary>
            Signature of a handler that can be passed to a prompt to provide additional validation logic
            or to customize the reply sent to the user when their response is invalid.
            </summary>
    <returns>To be added.</returns>
    <remarks>To be added.</remarks>
  </Docs>
</Type>