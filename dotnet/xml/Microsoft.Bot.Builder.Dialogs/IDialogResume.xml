<Type Name="IDialogResume" FullName="Microsoft.Bot.Builder.Dialogs.IDialogResume">
  <TypeSignature Language="C#" Value="public interface IDialogResume : Microsoft.Bot.Builder.Dialogs.IDialog" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IDialogResume implements class Microsoft.Bot.Builder.Dialogs.IDialog" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Bot.Builder.Dialogs.IDialogResume" />
  <TypeSignature Language="VB.NET" Value="Public Interface IDialogResume&#xA;Implements IDialog" />
  <TypeSignature Language="F#" Value="type IDialogResume = interface&#xA;    interface IDialog" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Bot.Builder.Dialogs</AssemblyName>
    <AssemblyVersion>4.0.0.46</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.Bot.Builder.Dialogs.IDialog</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
            Interface for all Dialog objects that can be resumed.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="DialogResume">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task DialogResume (Microsoft.Bot.Builder.Dialogs.DialogContext dc, System.Collections.Generic.IDictionary&lt;string,object&gt; result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task DialogResume(class Microsoft.Bot.Builder.Dialogs.DialogContext dc, class System.Collections.Generic.IDictionary`2&lt;string, object&gt; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.Dialogs.IDialogResume.DialogResume(Microsoft.Bot.Builder.Dialogs.DialogContext,System.Collections.Generic.IDictionary{System.String,System.Object})" />
      <MemberSignature Language="VB.NET" Value="Public Function DialogResume (dc As DialogContext, result As IDictionary(Of String, Object)) As Task" />
      <MemberSignature Language="F#" Value="abstract member DialogResume : Microsoft.Bot.Builder.Dialogs.DialogContext * System.Collections.Generic.IDictionary&lt;string, obj&gt; -&gt; System.Threading.Tasks.Task" Usage="iDialogResume.DialogResume (dc, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder.Dialogs</AssemblyName>
        <AssemblyVersion>4.0.0.46</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dc" Type="Microsoft.Bot.Builder.Dialogs.DialogContext" />
        <Parameter Name="result" Type="System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;" />
      </Parameters>
      <Docs>
        <param name="dc">The dialog context for the current turn of conversation.</param>
        <param name="result">(Optional) value returned from the dialog that was called. The type of the value returned is dependant on the dialog that was called.</param>
        <summary>
            Method called when an instance of the dialog is being returned to from another
            dialog that was started by the current instance using `DialogSet.begin()`.
            If this method is NOT implemented then the dialog will be automatically ended with a call
            to `DialogSet.endDialogWithResult()`. Any result passed from the called dialog will be passed
            to the current dialogs parent.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>