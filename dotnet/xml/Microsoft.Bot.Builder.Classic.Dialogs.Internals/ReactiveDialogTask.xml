<Type Name="ReactiveDialogTask" FullName="Microsoft.Bot.Builder.Classic.Dialogs.Internals.ReactiveDialogTask">
  <TypeSignature Language="C#" Value="public sealed class ReactiveDialogTask : Microsoft.Bot.Builder.Classic.Base.IEventLoop, Microsoft.Bot.Builder.Classic.Base.IEventProducer&lt;Microsoft.Bot.Schema.IActivity&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ReactiveDialogTask extends System.Object implements class Microsoft.Bot.Builder.Classic.Base.IEventLoop, class Microsoft.Bot.Builder.Classic.Base.IEventProducer`1&lt;class Microsoft.Bot.Schema.IActivity&gt;" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Bot.Builder.Classic.Dialogs.Internals.ReactiveDialogTask" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ReactiveDialogTask&#xA;Implements IEventLoop, IEventProducer(Of IActivity)" />
  <TypeSignature Language="F#" Value="type ReactiveDialogTask = class&#xA;    interface IEventLoop&#xA;    interface IEventProducer&lt;IActivity&gt;" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Bot.Builder.Classic</AssemblyName>
    <AssemblyVersion>4.0.0.46</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.Bot.Builder.Classic.Base.IEventLoop</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.Bot.Builder.Classic.Base.IEventProducer&lt;Microsoft.Bot.Schema.IActivity&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ReactiveDialogTask (Microsoft.Bot.Builder.Classic.Dialogs.Internals.IDialogTask dialogTask, Func&lt;Microsoft.Bot.Builder.Classic.Dialogs.IDialog&lt;object&gt;&gt; makeRoot);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.Bot.Builder.Classic.Dialogs.Internals.IDialogTask dialogTask, class System.Func`1&lt;class Microsoft.Bot.Builder.Classic.Dialogs.IDialog`1&lt;object&gt;&gt; makeRoot) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.Classic.Dialogs.Internals.ReactiveDialogTask.#ctor(Microsoft.Bot.Builder.Classic.Dialogs.Internals.IDialogTask,System.Func{Microsoft.Bot.Builder.Classic.Dialogs.IDialog{System.Object}})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (dialogTask As IDialogTask, makeRoot As Func(Of IDialog(Of Object)))" />
      <MemberSignature Language="F#" Value="new Microsoft.Bot.Builder.Classic.Dialogs.Internals.ReactiveDialogTask : Microsoft.Bot.Builder.Classic.Dialogs.Internals.IDialogTask * Func&lt;Microsoft.Bot.Builder.Classic.Dialogs.IDialog&lt;obj&gt;&gt; -&gt; Microsoft.Bot.Builder.Classic.Dialogs.Internals.ReactiveDialogTask" Usage="new Microsoft.Bot.Builder.Classic.Dialogs.Internals.ReactiveDialogTask (dialogTask, makeRoot)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder.Classic</AssemblyName>
        <AssemblyVersion>4.0.0.46</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="dialogTask" Type="Microsoft.Bot.Builder.Classic.Dialogs.Internals.IDialogTask" />
        <Parameter Name="makeRoot" Type="System.Func&lt;Microsoft.Bot.Builder.Classic.Dialogs.IDialog&lt;System.Object&gt;&gt;" />
      </Parameters>
      <Docs>
        <param name="dialogTask">To be added.</param>
        <param name="makeRoot">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Microsoft.Bot.Builder.Classic.Base.IEventLoop.PollAsync">
      <MemberSignature Language="C#" Value="System.Threading.Tasks.Task IEventLoop.PollAsync (System.Threading.CancellationToken token);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Threading.Tasks.Task Microsoft.Bot.Builder.Classic.Base.IEventLoop.PollAsync(valuetype System.Threading.CancellationToken token) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.Classic.Dialogs.Internals.ReactiveDialogTask.Microsoft#Bot#Builder#Classic#Base#IEventLoop#PollAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Function PollAsync (token As CancellationToken) As Task Implements IEventLoop.PollAsync" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Bot.Builder.Classic.Base.IEventLoop.PollAsync(System.Threading.CancellationToken)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder.Classic</AssemblyName>
        <AssemblyVersion>4.0.0.46</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="token">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Microsoft.Bot.Builder.Classic.Base.IEventProducer&lt;Microsoft.Bot.Schema.IActivity&gt;.Post">
      <MemberSignature Language="C#" Value="void IEventProducer&lt;IActivity&gt;.Post (Microsoft.Bot.Schema.IActivity item, Action onPull);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void Microsoft.Bot.Builder.Classic.Base.IEventProducer&lt;Microsoft.Bot.Schema.IActivity&gt;.Post(class Microsoft.Bot.Schema.IActivity item, class System.Action onPull) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.Classic.Dialogs.Internals.ReactiveDialogTask.Microsoft#Bot#Builder#Classic#Base#IEventProducer&lt;Microsoft#Bot#Schema#IActivity&gt;#Post(Microsoft.Bot.Schema.IActivity,System.Action)" />
      <MemberSignature Language="VB.NET" Value="Sub Post (item As IActivity, onPull As Action) Implements IEventProducer(Of IActivity).Post" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Bot.Builder.Classic.Base.IEventProducer`1.Post(`0,System.Action)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder.Classic</AssemblyName>
        <AssemblyVersion>4.0.0.46</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="Microsoft.Bot.Schema.IActivity" />
        <Parameter Name="onPull" Type="System.Action" />
      </Parameters>
      <Docs>
        <param name="item">To be added.</param>
        <param name="onPull">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>