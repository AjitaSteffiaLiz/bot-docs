<Type Name="PromptDialog+PromptAttachment" FullName="Microsoft.Bot.Builder.Classic.Dialogs.PromptDialog+PromptAttachment">
  <TypeSignature Language="C#" Value="public class PromptDialog.PromptAttachment : Microsoft.Bot.Builder.Classic.Dialogs.Internals.Prompt&lt;System.Collections.Generic.IEnumerable&lt;Microsoft.Bot.Schema.Attachment&gt;,Microsoft.Bot.Schema.Attachment&gt;" />
  <TypeSignature Language="ILAsm" Value=".class nested public auto ansi serializable beforefieldinit PromptDialog/PromptAttachment extends Microsoft.Bot.Builder.Classic.Dialogs.Internals.Prompt`2&lt;class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Bot.Schema.Attachment&gt;, class Microsoft.Bot.Schema.Attachment&gt;" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Bot.Builder.Classic.Dialogs.PromptDialog.PromptAttachment" />
  <TypeSignature Language="VB.NET" Value="Public Class PromptDialog.PromptAttachment&#xA;Inherits Prompt(Of IEnumerable(Of Attachment), Attachment)" />
  <TypeSignature Language="F#" Value="type PromptDialog.PromptAttachment = class&#xA;    inherit Prompt&lt;seq&lt;Attachment&gt;, Attachment&gt;" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Bot.Builder.Classic</AssemblyName>
    <AssemblyVersion>4.0.0.46</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.Bot.Builder.Classic.Dialogs.Internals.Prompt&lt;System.Collections.Generic.IEnumerable&lt;Microsoft.Bot.Schema.Attachment&gt;,Microsoft.Bot.Schema.Attachment&gt;</BaseTypeName>
    <BaseTypeArguments>
      <BaseTypeArgument TypeParamName="T">System.Collections.Generic.IEnumerable&lt;Microsoft.Bot.Schema.Attachment&gt;</BaseTypeArgument>
      <BaseTypeArgument TypeParamName="U">Microsoft.Bot.Schema.Attachment</BaseTypeArgument>
    </BaseTypeArguments>
  </Base>
  <Interfaces />
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PromptAttachment (string prompt, string retry, int attempts, System.Collections.Generic.IEnumerable&lt;string&gt; contentTypes = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string prompt, string retry, int32 attempts, class System.Collections.Generic.IEnumerable`1&lt;string&gt; contentTypes) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.Classic.Dialogs.PromptDialog.PromptAttachment.#ctor(System.String,System.String,System.Int32,System.Collections.Generic.IEnumerable{System.String})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (prompt As String, retry As String, attempts As Integer, Optional contentTypes As IEnumerable(Of String) = null)" />
      <MemberSignature Language="F#" Value="new Microsoft.Bot.Builder.Classic.Dialogs.PromptDialog.PromptAttachment : string * string * int * seq&lt;string&gt; -&gt; Microsoft.Bot.Builder.Classic.Dialogs.PromptDialog.PromptAttachment" Usage="new Microsoft.Bot.Builder.Classic.Dialogs.PromptDialog.PromptAttachment (prompt, retry, attempts, contentTypes)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder.Classic</AssemblyName>
        <AssemblyVersion>4.0.0.46</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="prompt" Type="System.String" />
        <Parameter Name="retry" Type="System.String" />
        <Parameter Name="attempts" Type="System.Int32" />
        <Parameter Name="contentTypes" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="prompt">To be added.</param>
        <param name="retry">To be added.</param>
        <param name="attempts">To be added.</param>
        <param name="contentTypes">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContentTypes">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;string&gt; ContentTypes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;string&gt; ContentTypes" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Bot.Builder.Classic.Dialogs.PromptDialog.PromptAttachment.ContentTypes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ContentTypes As IEnumerable(Of String)" />
      <MemberSignature Language="F#" Value="member this.ContentTypes : seq&lt;string&gt;" Usage="Microsoft.Bot.Builder.Classic.Dialogs.PromptDialog.PromptAttachment.ContentTypes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder.Classic</AssemblyName>
        <AssemblyVersion>4.0.0.46</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="protected internal override bool TryParse (Microsoft.Bot.Schema.IMessageActivity message, out System.Collections.Generic.IEnumerable&lt;Microsoft.Bot.Schema.Attachment&gt; result);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance bool TryParse(class Microsoft.Bot.Schema.IMessageActivity message, [out] class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Bot.Schema.Attachment&gt;&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.Classic.Dialogs.PromptDialog.PromptAttachment.TryParse(Microsoft.Bot.Schema.IMessageActivity,System.Collections.Generic.IEnumerable{Microsoft.Bot.Schema.Attachment}@)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Function TryParse (message As IMessageActivity, ByRef result As IEnumerable(Of Attachment)) As Boolean" />
      <MemberSignature Language="F#" Value="override this.TryParse : Microsoft.Bot.Schema.IMessageActivity *  -&gt; bool" Usage="promptAttachment.TryParse (message, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder.Classic</AssemblyName>
        <AssemblyVersion>4.0.0.46</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="Microsoft.Bot.Schema.IMessageActivity" />
        <Parameter Name="result" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Bot.Schema.Attachment&gt;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="message">To be added.</param>
        <param name="result">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>