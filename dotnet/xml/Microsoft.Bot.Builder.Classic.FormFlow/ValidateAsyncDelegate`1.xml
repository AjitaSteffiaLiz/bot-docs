<Type Name="ValidateAsyncDelegate&lt;T&gt;" FullName="Microsoft.Bot.Builder.Classic.FormFlow.ValidateAsyncDelegate&lt;T&gt;">
  <TypeSignature Language="C#" Value="public delegate System.Threading.Tasks.Task&lt;Microsoft.Bot.Builder.Classic.FormFlow.ValidateResult&gt; ValidateAsyncDelegate&lt;T&gt;(T state, object value);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed ValidateAsyncDelegate`1&lt;T&gt; extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Bot.Builder.Classic.FormFlow.ValidateAsyncDelegate`1" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Function ValidateAsyncDelegate(Of T)(state As T, value As Object) As Task(Of ValidateResult) " />
  <TypeSignature Language="F#" Value="type ValidateAsyncDelegate&lt;'T&gt; = delegate of 'T * obj -&gt; Task&lt;ValidateResult&gt;" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Bot.Builder.Classic</AssemblyName>
    <AssemblyVersion>4.0.0.46</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Parameters>
    <Parameter Name="state" Type="T" />
    <Parameter Name="value" Type="System.Object" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Bot.Builder.Classic.FormFlow.ValidateResult&gt;</ReturnType>
  </ReturnValue>
  <Docs>
    <typeparam name="T">To be added.</typeparam>
    <param name="state">To be added.</param>
    <param name="value">To be added.</param>
    <summary>To be added.</summary>
    <returns>To be added.</returns>
    <remarks>To be added.</remarks>
  </Docs>
</Type>