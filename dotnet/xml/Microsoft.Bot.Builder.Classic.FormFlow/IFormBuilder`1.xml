<Type Name="IFormBuilder&lt;T&gt;" FullName="Microsoft.Bot.Builder.Classic.FormFlow.IFormBuilder&lt;T&gt;">
  <TypeSignature Language="C#" Value="public interface IFormBuilder&lt;T&gt; where T : class" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IFormBuilder`1&lt;class T&gt;" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Bot.Builder.Classic.FormFlow.IFormBuilder`1" />
  <TypeSignature Language="VB.NET" Value="Public Interface IFormBuilder(Of T)" />
  <TypeSignature Language="F#" Value="type IFormBuilder&lt;'T (requires 'T : null)&gt; = interface" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Bot.Builder.Classic</AssemblyName>
    <AssemblyVersion>4.0.0.46</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T">
      <Constraints>
        <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Interfaces />
  <Docs>
    <typeparam name="T">To be added.</typeparam>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="AddRemainingFields">
      <MemberSignature Language="C#" Value="public Microsoft.Bot.Builder.Classic.FormFlow.IFormBuilder&lt;T&gt; AddRemainingFields (System.Collections.Generic.IEnumerable&lt;string&gt; exclude = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Bot.Builder.Classic.FormFlow.IFormBuilder`1&lt;!T&gt; AddRemainingFields(class System.Collections.Generic.IEnumerable`1&lt;string&gt; exclude) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.Classic.FormFlow.IFormBuilder`1.AddRemainingFields(System.Collections.Generic.IEnumerable{System.String})" />
      <MemberSignature Language="VB.NET" Value="Public Function AddRemainingFields (Optional exclude As IEnumerable(Of String) = null) As IFormBuilder(Of T)" />
      <MemberSignature Language="F#" Value="abstract member AddRemainingFields : seq&lt;string&gt; -&gt; Microsoft.Bot.Builder.Classic.FormFlow.IFormBuilder&lt;'T (requires 'T : null)&gt;" Usage="iFormBuilder.AddRemainingFields exclude" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder.Classic</AssemblyName>
        <AssemblyVersion>4.0.0.46</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Bot.Builder.Classic.FormFlow.IFormBuilder&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="exclude" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="exclude">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Build">
      <MemberSignature Language="C#" Value="public Microsoft.Bot.Builder.Classic.FormFlow.IForm&lt;T&gt; Build (System.Reflection.Assembly resourceAssembly = null, string resourceName = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Bot.Builder.Classic.FormFlow.IForm`1&lt;!T&gt; Build(class System.Reflection.Assembly resourceAssembly, string resourceName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.Classic.FormFlow.IFormBuilder`1.Build(System.Reflection.Assembly,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Build (Optional resourceAssembly As Assembly = null, Optional resourceName As String = null) As IForm(Of T)" />
      <MemberSignature Language="F#" Value="abstract member Build : System.Reflection.Assembly * string -&gt; Microsoft.Bot.Builder.Classic.FormFlow.IForm&lt;'T (requires 'T : null)&gt;" Usage="iFormBuilder.Build (resourceAssembly, resourceName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder.Classic</AssemblyName>
        <AssemblyVersion>4.0.0.46</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Bot.Builder.Classic.FormFlow.IForm&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceAssembly" Type="System.Reflection.Assembly" />
        <Parameter Name="resourceName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="resourceAssembly">To be added.</param>
        <param name="resourceName">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Configuration">
      <MemberSignature Language="C#" Value="public Microsoft.Bot.Builder.Classic.FormFlow.FormConfiguration Configuration { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Bot.Builder.Classic.FormFlow.FormConfiguration Configuration" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Bot.Builder.Classic.FormFlow.IFormBuilder`1.Configuration" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Configuration As FormConfiguration" />
      <MemberSignature Language="F#" Value="member this.Configuration : Microsoft.Bot.Builder.Classic.FormFlow.FormConfiguration" Usage="Microsoft.Bot.Builder.Classic.FormFlow.IFormBuilder&lt;'T (requires 'T : null)&gt;.Configuration" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder.Classic</AssemblyName>
        <AssemblyVersion>4.0.0.46</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Bot.Builder.Classic.FormFlow.FormConfiguration</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Confirm">
      <MemberSignature Language="C#" Value="public Microsoft.Bot.Builder.Classic.FormFlow.IFormBuilder&lt;T&gt; Confirm (Microsoft.Bot.Builder.Classic.FormFlow.MessageDelegate&lt;T&gt; generateMessage, Microsoft.Bot.Builder.Classic.FormFlow.ActiveDelegate&lt;T&gt; condition = null, System.Collections.Generic.IEnumerable&lt;string&gt; dependencies = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Bot.Builder.Classic.FormFlow.IFormBuilder`1&lt;!T&gt; Confirm(class Microsoft.Bot.Builder.Classic.FormFlow.MessageDelegate`1&lt;!T&gt; generateMessage, class Microsoft.Bot.Builder.Classic.FormFlow.ActiveDelegate`1&lt;!T&gt; condition, class System.Collections.Generic.IEnumerable`1&lt;string&gt; dependencies) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.Classic.FormFlow.IFormBuilder`1.Confirm(Microsoft.Bot.Builder.Classic.FormFlow.MessageDelegate{`0},Microsoft.Bot.Builder.Classic.FormFlow.ActiveDelegate{`0},System.Collections.Generic.IEnumerable{System.String})" />
      <MemberSignature Language="VB.NET" Value="Public Function Confirm (generateMessage As MessageDelegate(Of T), Optional condition As ActiveDelegate(Of T) = null, Optional dependencies As IEnumerable(Of String) = null) As IFormBuilder(Of T)" />
      <MemberSignature Language="F#" Value="abstract member Confirm : Microsoft.Bot.Builder.Classic.FormFlow.MessageDelegate&lt;'T (requires 'T : null)&gt; * Microsoft.Bot.Builder.Classic.FormFlow.ActiveDelegate&lt;'T (requires 'T : null)&gt; * seq&lt;string&gt; -&gt; Microsoft.Bot.Builder.Classic.FormFlow.IFormBuilder&lt;'T (requires 'T : null)&gt;" Usage="iFormBuilder.Confirm (generateMessage, condition, dependencies)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder.Classic</AssemblyName>
        <AssemblyVersion>4.0.0.46</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Bot.Builder.Classic.FormFlow.IFormBuilder&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="generateMessage" Type="Microsoft.Bot.Builder.Classic.FormFlow.MessageDelegate&lt;T&gt;" />
        <Parameter Name="condition" Type="Microsoft.Bot.Builder.Classic.FormFlow.ActiveDelegate&lt;T&gt;" />
        <Parameter Name="dependencies" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="generateMessage">To be added.</param>
        <param name="condition">To be added.</param>
        <param name="dependencies">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Confirm">
      <MemberSignature Language="C#" Value="public Microsoft.Bot.Builder.Classic.FormFlow.IFormBuilder&lt;T&gt; Confirm (Microsoft.Bot.Builder.Classic.FormFlow.PromptAttribute prompt, Microsoft.Bot.Builder.Classic.FormFlow.ActiveDelegate&lt;T&gt; condition = null, System.Collections.Generic.IEnumerable&lt;string&gt; dependencies = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Bot.Builder.Classic.FormFlow.IFormBuilder`1&lt;!T&gt; Confirm(class Microsoft.Bot.Builder.Classic.FormFlow.PromptAttribute prompt, class Microsoft.Bot.Builder.Classic.FormFlow.ActiveDelegate`1&lt;!T&gt; condition, class System.Collections.Generic.IEnumerable`1&lt;string&gt; dependencies) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.Classic.FormFlow.IFormBuilder`1.Confirm(Microsoft.Bot.Builder.Classic.FormFlow.PromptAttribute,Microsoft.Bot.Builder.Classic.FormFlow.ActiveDelegate{`0},System.Collections.Generic.IEnumerable{System.String})" />
      <MemberSignature Language="VB.NET" Value="Public Function Confirm (prompt As PromptAttribute, Optional condition As ActiveDelegate(Of T) = null, Optional dependencies As IEnumerable(Of String) = null) As IFormBuilder(Of T)" />
      <MemberSignature Language="F#" Value="abstract member Confirm : Microsoft.Bot.Builder.Classic.FormFlow.PromptAttribute * Microsoft.Bot.Builder.Classic.FormFlow.ActiveDelegate&lt;'T (requires 'T : null)&gt; * seq&lt;string&gt; -&gt; Microsoft.Bot.Builder.Classic.FormFlow.IFormBuilder&lt;'T (requires 'T : null)&gt;" Usage="iFormBuilder.Confirm (prompt, condition, dependencies)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder.Classic</AssemblyName>
        <AssemblyVersion>4.0.0.46</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Bot.Builder.Classic.FormFlow.IFormBuilder&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prompt" Type="Microsoft.Bot.Builder.Classic.FormFlow.PromptAttribute" />
        <Parameter Name="condition" Type="Microsoft.Bot.Builder.Classic.FormFlow.ActiveDelegate&lt;T&gt;" />
        <Parameter Name="dependencies" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="prompt">To be added.</param>
        <param name="condition">To be added.</param>
        <param name="dependencies">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Confirm">
      <MemberSignature Language="C#" Value="public Microsoft.Bot.Builder.Classic.FormFlow.IFormBuilder&lt;T&gt; Confirm (string prompt = null, Microsoft.Bot.Builder.Classic.FormFlow.ActiveDelegate&lt;T&gt; condition = null, System.Collections.Generic.IEnumerable&lt;string&gt; dependencies = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Bot.Builder.Classic.FormFlow.IFormBuilder`1&lt;!T&gt; Confirm(string prompt, class Microsoft.Bot.Builder.Classic.FormFlow.ActiveDelegate`1&lt;!T&gt; condition, class System.Collections.Generic.IEnumerable`1&lt;string&gt; dependencies) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.Classic.FormFlow.IFormBuilder`1.Confirm(System.String,Microsoft.Bot.Builder.Classic.FormFlow.ActiveDelegate{`0},System.Collections.Generic.IEnumerable{System.String})" />
      <MemberSignature Language="VB.NET" Value="Public Function Confirm (Optional prompt As String = null, Optional condition As ActiveDelegate(Of T) = null, Optional dependencies As IEnumerable(Of String) = null) As IFormBuilder(Of T)" />
      <MemberSignature Language="F#" Value="abstract member Confirm : string * Microsoft.Bot.Builder.Classic.FormFlow.ActiveDelegate&lt;'T (requires 'T : null)&gt; * seq&lt;string&gt; -&gt; Microsoft.Bot.Builder.Classic.FormFlow.IFormBuilder&lt;'T (requires 'T : null)&gt;" Usage="iFormBuilder.Confirm (prompt, condition, dependencies)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder.Classic</AssemblyName>
        <AssemblyVersion>4.0.0.46</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Bot.Builder.Classic.FormFlow.IFormBuilder&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prompt" Type="System.String" />
        <Parameter Name="condition" Type="Microsoft.Bot.Builder.Classic.FormFlow.ActiveDelegate&lt;T&gt;" />
        <Parameter Name="dependencies" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="prompt">To be added.</param>
        <param name="condition">To be added.</param>
        <param name="dependencies">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Field">
      <MemberSignature Language="C#" Value="public Microsoft.Bot.Builder.Classic.FormFlow.IFormBuilder&lt;T&gt; Field (Microsoft.Bot.Builder.Classic.FormFlow.Advanced.IField&lt;T&gt; field);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Bot.Builder.Classic.FormFlow.IFormBuilder`1&lt;!T&gt; Field(class Microsoft.Bot.Builder.Classic.FormFlow.Advanced.IField`1&lt;!T&gt; field) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.Classic.FormFlow.IFormBuilder`1.Field(Microsoft.Bot.Builder.Classic.FormFlow.Advanced.IField{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function Field (field As IField(Of T)) As IFormBuilder(Of T)" />
      <MemberSignature Language="F#" Value="abstract member Field : Microsoft.Bot.Builder.Classic.FormFlow.Advanced.IField&lt;'T (requires 'T : null)&gt; -&gt; Microsoft.Bot.Builder.Classic.FormFlow.IFormBuilder&lt;'T (requires 'T : null)&gt;" Usage="iFormBuilder.Field field" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder.Classic</AssemblyName>
        <AssemblyVersion>4.0.0.46</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Bot.Builder.Classic.FormFlow.IFormBuilder&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="field" Type="Microsoft.Bot.Builder.Classic.FormFlow.Advanced.IField&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="field">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Field">
      <MemberSignature Language="C#" Value="public Microsoft.Bot.Builder.Classic.FormFlow.IFormBuilder&lt;T&gt; Field (string name, Microsoft.Bot.Builder.Classic.FormFlow.ActiveDelegate&lt;T&gt; active = null, Microsoft.Bot.Builder.Classic.FormFlow.ValidateAsyncDelegate&lt;T&gt; validate = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Bot.Builder.Classic.FormFlow.IFormBuilder`1&lt;!T&gt; Field(string name, class Microsoft.Bot.Builder.Classic.FormFlow.ActiveDelegate`1&lt;!T&gt; active, class Microsoft.Bot.Builder.Classic.FormFlow.ValidateAsyncDelegate`1&lt;!T&gt; validate) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.Classic.FormFlow.IFormBuilder`1.Field(System.String,Microsoft.Bot.Builder.Classic.FormFlow.ActiveDelegate{`0},Microsoft.Bot.Builder.Classic.FormFlow.ValidateAsyncDelegate{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function Field (name As String, Optional active As ActiveDelegate(Of T) = null, Optional validate As ValidateAsyncDelegate(Of T) = null) As IFormBuilder(Of T)" />
      <MemberSignature Language="F#" Value="abstract member Field : string * Microsoft.Bot.Builder.Classic.FormFlow.ActiveDelegate&lt;'T (requires 'T : null)&gt; * Microsoft.Bot.Builder.Classic.FormFlow.ValidateAsyncDelegate&lt;'T (requires 'T : null)&gt; -&gt; Microsoft.Bot.Builder.Classic.FormFlow.IFormBuilder&lt;'T (requires 'T : null)&gt;" Usage="iFormBuilder.Field (name, active, validate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder.Classic</AssemblyName>
        <AssemblyVersion>4.0.0.46</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Bot.Builder.Classic.FormFlow.IFormBuilder&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="active" Type="Microsoft.Bot.Builder.Classic.FormFlow.ActiveDelegate&lt;T&gt;" />
        <Parameter Name="validate" Type="Microsoft.Bot.Builder.Classic.FormFlow.ValidateAsyncDelegate&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="name">To be added.</param>
        <param name="active">To be added.</param>
        <param name="validate">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Field">
      <MemberSignature Language="C#" Value="public Microsoft.Bot.Builder.Classic.FormFlow.IFormBuilder&lt;T&gt; Field (string name, Microsoft.Bot.Builder.Classic.FormFlow.PromptAttribute prompt, Microsoft.Bot.Builder.Classic.FormFlow.ActiveDelegate&lt;T&gt; active = null, Microsoft.Bot.Builder.Classic.FormFlow.ValidateAsyncDelegate&lt;T&gt; validate = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Bot.Builder.Classic.FormFlow.IFormBuilder`1&lt;!T&gt; Field(string name, class Microsoft.Bot.Builder.Classic.FormFlow.PromptAttribute prompt, class Microsoft.Bot.Builder.Classic.FormFlow.ActiveDelegate`1&lt;!T&gt; active, class Microsoft.Bot.Builder.Classic.FormFlow.ValidateAsyncDelegate`1&lt;!T&gt; validate) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.Classic.FormFlow.IFormBuilder`1.Field(System.String,Microsoft.Bot.Builder.Classic.FormFlow.PromptAttribute,Microsoft.Bot.Builder.Classic.FormFlow.ActiveDelegate{`0},Microsoft.Bot.Builder.Classic.FormFlow.ValidateAsyncDelegate{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function Field (name As String, prompt As PromptAttribute, Optional active As ActiveDelegate(Of T) = null, Optional validate As ValidateAsyncDelegate(Of T) = null) As IFormBuilder(Of T)" />
      <MemberSignature Language="F#" Value="abstract member Field : string * Microsoft.Bot.Builder.Classic.FormFlow.PromptAttribute * Microsoft.Bot.Builder.Classic.FormFlow.ActiveDelegate&lt;'T (requires 'T : null)&gt; * Microsoft.Bot.Builder.Classic.FormFlow.ValidateAsyncDelegate&lt;'T (requires 'T : null)&gt; -&gt; Microsoft.Bot.Builder.Classic.FormFlow.IFormBuilder&lt;'T (requires 'T : null)&gt;" Usage="iFormBuilder.Field (name, prompt, active, validate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder.Classic</AssemblyName>
        <AssemblyVersion>4.0.0.46</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Bot.Builder.Classic.FormFlow.IFormBuilder&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="prompt" Type="Microsoft.Bot.Builder.Classic.FormFlow.PromptAttribute" />
        <Parameter Name="active" Type="Microsoft.Bot.Builder.Classic.FormFlow.ActiveDelegate&lt;T&gt;" />
        <Parameter Name="validate" Type="Microsoft.Bot.Builder.Classic.FormFlow.ValidateAsyncDelegate&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="name">To be added.</param>
        <param name="prompt">To be added.</param>
        <param name="active">To be added.</param>
        <param name="validate">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Field">
      <MemberSignature Language="C#" Value="public Microsoft.Bot.Builder.Classic.FormFlow.IFormBuilder&lt;T&gt; Field (string name, string prompt, Microsoft.Bot.Builder.Classic.FormFlow.ActiveDelegate&lt;T&gt; active = null, Microsoft.Bot.Builder.Classic.FormFlow.ValidateAsyncDelegate&lt;T&gt; validate = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Bot.Builder.Classic.FormFlow.IFormBuilder`1&lt;!T&gt; Field(string name, string prompt, class Microsoft.Bot.Builder.Classic.FormFlow.ActiveDelegate`1&lt;!T&gt; active, class Microsoft.Bot.Builder.Classic.FormFlow.ValidateAsyncDelegate`1&lt;!T&gt; validate) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.Classic.FormFlow.IFormBuilder`1.Field(System.String,System.String,Microsoft.Bot.Builder.Classic.FormFlow.ActiveDelegate{`0},Microsoft.Bot.Builder.Classic.FormFlow.ValidateAsyncDelegate{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function Field (name As String, prompt As String, Optional active As ActiveDelegate(Of T) = null, Optional validate As ValidateAsyncDelegate(Of T) = null) As IFormBuilder(Of T)" />
      <MemberSignature Language="F#" Value="abstract member Field : string * string * Microsoft.Bot.Builder.Classic.FormFlow.ActiveDelegate&lt;'T (requires 'T : null)&gt; * Microsoft.Bot.Builder.Classic.FormFlow.ValidateAsyncDelegate&lt;'T (requires 'T : null)&gt; -&gt; Microsoft.Bot.Builder.Classic.FormFlow.IFormBuilder&lt;'T (requires 'T : null)&gt;" Usage="iFormBuilder.Field (name, prompt, active, validate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder.Classic</AssemblyName>
        <AssemblyVersion>4.0.0.46</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Bot.Builder.Classic.FormFlow.IFormBuilder&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="prompt" Type="System.String" />
        <Parameter Name="active" Type="Microsoft.Bot.Builder.Classic.FormFlow.ActiveDelegate&lt;T&gt;" />
        <Parameter Name="validate" Type="Microsoft.Bot.Builder.Classic.FormFlow.ValidateAsyncDelegate&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="name">To be added.</param>
        <param name="prompt">To be added.</param>
        <param name="active">To be added.</param>
        <param name="validate">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasField">
      <MemberSignature Language="C#" Value="public bool HasField (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool HasField(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.Classic.FormFlow.IFormBuilder`1.HasField(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function HasField (name As String) As Boolean" />
      <MemberSignature Language="F#" Value="abstract member HasField : string -&gt; bool" Usage="iFormBuilder.HasField name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder.Classic</AssemblyName>
        <AssemblyVersion>4.0.0.46</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Message">
      <MemberSignature Language="C#" Value="public Microsoft.Bot.Builder.Classic.FormFlow.IFormBuilder&lt;T&gt; Message (Microsoft.Bot.Builder.Classic.FormFlow.MessageDelegate&lt;T&gt; generateMessage, Microsoft.Bot.Builder.Classic.FormFlow.ActiveDelegate&lt;T&gt; condition = null, System.Collections.Generic.IEnumerable&lt;string&gt; dependencies = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Bot.Builder.Classic.FormFlow.IFormBuilder`1&lt;!T&gt; Message(class Microsoft.Bot.Builder.Classic.FormFlow.MessageDelegate`1&lt;!T&gt; generateMessage, class Microsoft.Bot.Builder.Classic.FormFlow.ActiveDelegate`1&lt;!T&gt; condition, class System.Collections.Generic.IEnumerable`1&lt;string&gt; dependencies) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.Classic.FormFlow.IFormBuilder`1.Message(Microsoft.Bot.Builder.Classic.FormFlow.MessageDelegate{`0},Microsoft.Bot.Builder.Classic.FormFlow.ActiveDelegate{`0},System.Collections.Generic.IEnumerable{System.String})" />
      <MemberSignature Language="VB.NET" Value="Public Function Message (generateMessage As MessageDelegate(Of T), Optional condition As ActiveDelegate(Of T) = null, Optional dependencies As IEnumerable(Of String) = null) As IFormBuilder(Of T)" />
      <MemberSignature Language="F#" Value="abstract member Message : Microsoft.Bot.Builder.Classic.FormFlow.MessageDelegate&lt;'T (requires 'T : null)&gt; * Microsoft.Bot.Builder.Classic.FormFlow.ActiveDelegate&lt;'T (requires 'T : null)&gt; * seq&lt;string&gt; -&gt; Microsoft.Bot.Builder.Classic.FormFlow.IFormBuilder&lt;'T (requires 'T : null)&gt;" Usage="iFormBuilder.Message (generateMessage, condition, dependencies)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder.Classic</AssemblyName>
        <AssemblyVersion>4.0.0.46</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Bot.Builder.Classic.FormFlow.IFormBuilder&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="generateMessage" Type="Microsoft.Bot.Builder.Classic.FormFlow.MessageDelegate&lt;T&gt;" />
        <Parameter Name="condition" Type="Microsoft.Bot.Builder.Classic.FormFlow.ActiveDelegate&lt;T&gt;" />
        <Parameter Name="dependencies" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="generateMessage">To be added.</param>
        <param name="condition">To be added.</param>
        <param name="dependencies">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Message">
      <MemberSignature Language="C#" Value="public Microsoft.Bot.Builder.Classic.FormFlow.IFormBuilder&lt;T&gt; Message (Microsoft.Bot.Builder.Classic.FormFlow.PromptAttribute prompt, Microsoft.Bot.Builder.Classic.FormFlow.ActiveDelegate&lt;T&gt; condition = null, System.Collections.Generic.IEnumerable&lt;string&gt; dependencies = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Bot.Builder.Classic.FormFlow.IFormBuilder`1&lt;!T&gt; Message(class Microsoft.Bot.Builder.Classic.FormFlow.PromptAttribute prompt, class Microsoft.Bot.Builder.Classic.FormFlow.ActiveDelegate`1&lt;!T&gt; condition, class System.Collections.Generic.IEnumerable`1&lt;string&gt; dependencies) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.Classic.FormFlow.IFormBuilder`1.Message(Microsoft.Bot.Builder.Classic.FormFlow.PromptAttribute,Microsoft.Bot.Builder.Classic.FormFlow.ActiveDelegate{`0},System.Collections.Generic.IEnumerable{System.String})" />
      <MemberSignature Language="VB.NET" Value="Public Function Message (prompt As PromptAttribute, Optional condition As ActiveDelegate(Of T) = null, Optional dependencies As IEnumerable(Of String) = null) As IFormBuilder(Of T)" />
      <MemberSignature Language="F#" Value="abstract member Message : Microsoft.Bot.Builder.Classic.FormFlow.PromptAttribute * Microsoft.Bot.Builder.Classic.FormFlow.ActiveDelegate&lt;'T (requires 'T : null)&gt; * seq&lt;string&gt; -&gt; Microsoft.Bot.Builder.Classic.FormFlow.IFormBuilder&lt;'T (requires 'T : null)&gt;" Usage="iFormBuilder.Message (prompt, condition, dependencies)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder.Classic</AssemblyName>
        <AssemblyVersion>4.0.0.46</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Bot.Builder.Classic.FormFlow.IFormBuilder&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prompt" Type="Microsoft.Bot.Builder.Classic.FormFlow.PromptAttribute" />
        <Parameter Name="condition" Type="Microsoft.Bot.Builder.Classic.FormFlow.ActiveDelegate&lt;T&gt;" />
        <Parameter Name="dependencies" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="prompt">To be added.</param>
        <param name="condition">To be added.</param>
        <param name="dependencies">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Message">
      <MemberSignature Language="C#" Value="public Microsoft.Bot.Builder.Classic.FormFlow.IFormBuilder&lt;T&gt; Message (string message, Microsoft.Bot.Builder.Classic.FormFlow.ActiveDelegate&lt;T&gt; condition = null, System.Collections.Generic.IEnumerable&lt;string&gt; dependencies = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Bot.Builder.Classic.FormFlow.IFormBuilder`1&lt;!T&gt; Message(string message, class Microsoft.Bot.Builder.Classic.FormFlow.ActiveDelegate`1&lt;!T&gt; condition, class System.Collections.Generic.IEnumerable`1&lt;string&gt; dependencies) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.Classic.FormFlow.IFormBuilder`1.Message(System.String,Microsoft.Bot.Builder.Classic.FormFlow.ActiveDelegate{`0},System.Collections.Generic.IEnumerable{System.String})" />
      <MemberSignature Language="VB.NET" Value="Public Function Message (message As String, Optional condition As ActiveDelegate(Of T) = null, Optional dependencies As IEnumerable(Of String) = null) As IFormBuilder(Of T)" />
      <MemberSignature Language="F#" Value="abstract member Message : string * Microsoft.Bot.Builder.Classic.FormFlow.ActiveDelegate&lt;'T (requires 'T : null)&gt; * seq&lt;string&gt; -&gt; Microsoft.Bot.Builder.Classic.FormFlow.IFormBuilder&lt;'T (requires 'T : null)&gt;" Usage="iFormBuilder.Message (message, condition, dependencies)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder.Classic</AssemblyName>
        <AssemblyVersion>4.0.0.46</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Bot.Builder.Classic.FormFlow.IFormBuilder&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="condition" Type="Microsoft.Bot.Builder.Classic.FormFlow.ActiveDelegate&lt;T&gt;" />
        <Parameter Name="dependencies" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="message">To be added.</param>
        <param name="condition">To be added.</param>
        <param name="dependencies">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnCompletion">
      <MemberSignature Language="C#" Value="public Microsoft.Bot.Builder.Classic.FormFlow.IFormBuilder&lt;T&gt; OnCompletion (Microsoft.Bot.Builder.Classic.FormFlow.OnCompletionAsyncDelegate&lt;T&gt; callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Bot.Builder.Classic.FormFlow.IFormBuilder`1&lt;!T&gt; OnCompletion(class Microsoft.Bot.Builder.Classic.FormFlow.OnCompletionAsyncDelegate`1&lt;!T&gt; callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.Classic.FormFlow.IFormBuilder`1.OnCompletion(Microsoft.Bot.Builder.Classic.FormFlow.OnCompletionAsyncDelegate{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function OnCompletion (callback As OnCompletionAsyncDelegate(Of T)) As IFormBuilder(Of T)" />
      <MemberSignature Language="F#" Value="abstract member OnCompletion : Microsoft.Bot.Builder.Classic.FormFlow.OnCompletionAsyncDelegate&lt;'T (requires 'T : null)&gt; -&gt; Microsoft.Bot.Builder.Classic.FormFlow.IFormBuilder&lt;'T (requires 'T : null)&gt;" Usage="iFormBuilder.OnCompletion callback" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder.Classic</AssemblyName>
        <AssemblyVersion>4.0.0.46</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Bot.Builder.Classic.FormFlow.IFormBuilder&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="Microsoft.Bot.Builder.Classic.FormFlow.OnCompletionAsyncDelegate&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="callback">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Prompter">
      <MemberSignature Language="C#" Value="public Microsoft.Bot.Builder.Classic.FormFlow.IFormBuilder&lt;T&gt; Prompter (Microsoft.Bot.Builder.Classic.FormFlow.Advanced.PromptAsyncDelegate&lt;T&gt; prompter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Bot.Builder.Classic.FormFlow.IFormBuilder`1&lt;!T&gt; Prompter(class Microsoft.Bot.Builder.Classic.FormFlow.Advanced.PromptAsyncDelegate`1&lt;!T&gt; prompter) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.Classic.FormFlow.IFormBuilder`1.Prompter(Microsoft.Bot.Builder.Classic.FormFlow.Advanced.PromptAsyncDelegate{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function Prompter (prompter As PromptAsyncDelegate(Of T)) As IFormBuilder(Of T)" />
      <MemberSignature Language="F#" Value="abstract member Prompter : Microsoft.Bot.Builder.Classic.FormFlow.Advanced.PromptAsyncDelegate&lt;'T (requires 'T : null)&gt; -&gt; Microsoft.Bot.Builder.Classic.FormFlow.IFormBuilder&lt;'T (requires 'T : null)&gt;" Usage="iFormBuilder.Prompter prompter" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder.Classic</AssemblyName>
        <AssemblyVersion>4.0.0.46</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Bot.Builder.Classic.FormFlow.IFormBuilder&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prompter" Type="Microsoft.Bot.Builder.Classic.FormFlow.Advanced.PromptAsyncDelegate&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="prompter">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>