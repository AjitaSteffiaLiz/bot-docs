<Type Name="RecognizerResult" FullName="Microsoft.Bot.Builder.Core.Extensions.RecognizerResult">
  <TypeSignature Language="C#" Value="public class RecognizerResult : Microsoft.Bot.Builder.Core.Extensions.IRecognizerConvert" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit RecognizerResult extends System.Object implements class Microsoft.Bot.Builder.Core.Extensions.IRecognizerConvert" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Bot.Builder.Core.Extensions.RecognizerResult" />
  <TypeSignature Language="VB.NET" Value="Public Class RecognizerResult&#xA;Implements IRecognizerConvert" />
  <TypeSignature Language="F#" Value="type RecognizerResult = class&#xA;    interface IRecognizerConvert" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Bot.Builder.Core.Extensions</AssemblyName>
    <AssemblyVersion>4.0.0.46</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.Bot.Builder.Core.Extensions.IRecognizerConvert</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
            Recognizer return value.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RecognizerResult ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.Core.Extensions.RecognizerResult.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder.Core.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.46</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AlteredText">
      <MemberSignature Language="C#" Value="public string AlteredText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AlteredText" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Bot.Builder.Core.Extensions.RecognizerResult.AlteredText" />
      <MemberSignature Language="VB.NET" Value="Public Property AlteredText As String" />
      <MemberSignature Language="F#" Value="member this.AlteredText : string with get, set" Usage="Microsoft.Bot.Builder.Core.Extensions.RecognizerResult.AlteredText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder.Core.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.46</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="botbuilder-dotnet-preview">
          <AttributeName>Newtonsoft.Json.JsonProperty("alteredText")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Text modified by recognizer for example by spell correction.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Convert">
      <MemberSignature Language="C#" Value="public void Convert (dynamic result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Convert(object result) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.Core.Extensions.RecognizerResult.Convert(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Convert (result As Object)" />
      <MemberSignature Language="F#" Value="abstract member Convert : obj -&gt; unit&#xA;override this.Convert : obj -&gt; unit" Usage="recognizerResult.Convert result" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Bot.Builder.Core.Extensions.IRecognizerConvert.Convert(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder.Core.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.46</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="result">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="Entities">
      <MemberSignature Language="C#" Value="public Newtonsoft.Json.Linq.JObject Entities { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Newtonsoft.Json.Linq.JObject Entities" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Bot.Builder.Core.Extensions.RecognizerResult.Entities" />
      <MemberSignature Language="VB.NET" Value="Public Property Entities As JObject" />
      <MemberSignature Language="F#" Value="member this.Entities : Newtonsoft.Json.Linq.JObject with get, set" Usage="Microsoft.Bot.Builder.Core.Extensions.RecognizerResult.Entities" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder.Core.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.46</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="botbuilder-dotnet-preview">
          <AttributeName>Newtonsoft.Json.JsonProperty("entities")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Newtonsoft.Json.Linq.JObject</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Object with each top-level recognized entity as a key.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Intents">
      <MemberSignature Language="C#" Value="public Newtonsoft.Json.Linq.JObject Intents { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Newtonsoft.Json.Linq.JObject Intents" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Bot.Builder.Core.Extensions.RecognizerResult.Intents" />
      <MemberSignature Language="VB.NET" Value="Public Property Intents As JObject" />
      <MemberSignature Language="F#" Value="member this.Intents : Newtonsoft.Json.Linq.JObject with get, set" Usage="Microsoft.Bot.Builder.Core.Extensions.RecognizerResult.Intents" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder.Core.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.46</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="botbuilder-dotnet-preview">
          <AttributeName>Newtonsoft.Json.JsonProperty("intents")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Newtonsoft.Json.Linq.JObject</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Object with the intent as key and the confidence as value.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Properties">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IDictionary&lt;string,object&gt; Properties { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IDictionary`2&lt;string, object&gt; Properties" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Bot.Builder.Core.Extensions.RecognizerResult.Properties" />
      <MemberSignature Language="VB.NET" Value="Public Property Properties As IDictionary(Of String, Object)" />
      <MemberSignature Language="F#" Value="member this.Properties : System.Collections.Generic.IDictionary&lt;string, obj&gt; with get, set" Usage="Microsoft.Bot.Builder.Core.Extensions.RecognizerResult.Properties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder.Core.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.46</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="botbuilder-dotnet-preview">
          <AttributeName>Newtonsoft.Json.JsonExtensionData(ReadData=true, WriteData=true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Any extra properties to include in the results.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="C#" Value="public string Text { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Text" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Bot.Builder.Core.Extensions.RecognizerResult.Text" />
      <MemberSignature Language="VB.NET" Value="Public Property Text As String" />
      <MemberSignature Language="F#" Value="member this.Text : string with get, set" Usage="Microsoft.Bot.Builder.Core.Extensions.RecognizerResult.Text" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder.Core.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.46</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="botbuilder-dotnet-preview">
          <AttributeName>Newtonsoft.Json.JsonProperty("text")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Original text to recognizer.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>