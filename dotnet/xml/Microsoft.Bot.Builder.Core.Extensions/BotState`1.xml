<Type Name="BotState&lt;TState&gt;" FullName="Microsoft.Bot.Builder.Core.Extensions.BotState&lt;TState&gt;">
  <TypeSignature Language="C#" Value="public class BotState&lt;TState&gt; : Microsoft.Bot.Builder.IMiddleware where TState : class, new()" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit BotState`1&lt;class .ctor TState&gt; extends System.Object implements class Microsoft.Bot.Builder.IMiddleware" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Bot.Builder.Core.Extensions.BotState`1" />
  <TypeSignature Language="VB.NET" Value="Public Class BotState(Of TState)&#xA;Implements IMiddleware" />
  <TypeSignature Language="F#" Value="type BotState&lt;'State (requires 'State : null and 'State : (new : unit -&gt; 'State))&gt; = class&#xA;    interface IMiddleware" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Bot.Builder.Core.Extensions</AssemblyName>
    <AssemblyVersion>4.0.0.46</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TState">
      <Constraints>
        <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
        <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.Bot.Builder.IMiddleware</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <typeparam name="TState">The type of the bot state object.</typeparam>
    <summary>
            Abstract Base class which manages details of automatic loading and saving of bot state.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BotState (Microsoft.Bot.Builder.Core.Extensions.IStorage storage, string propertyName, Func&lt;Microsoft.Bot.Builder.ITurnContext,string&gt; keyDelegate, Microsoft.Bot.Builder.Core.Extensions.StateSettings settings = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.Bot.Builder.Core.Extensions.IStorage storage, string propertyName, class System.Func`2&lt;class Microsoft.Bot.Builder.ITurnContext, string&gt; keyDelegate, class Microsoft.Bot.Builder.Core.Extensions.StateSettings settings) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.Core.Extensions.BotState`1.#ctor(Microsoft.Bot.Builder.Core.Extensions.IStorage,System.String,System.Func{Microsoft.Bot.Builder.ITurnContext,System.String},Microsoft.Bot.Builder.Core.Extensions.StateSettings)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (storage As IStorage, propertyName As String, keyDelegate As Func(Of ITurnContext, String), Optional settings As StateSettings = null)" />
      <MemberSignature Language="F#" Value="new Microsoft.Bot.Builder.Core.Extensions.BotState&lt;'State (requires 'State : null and 'State : (new : unit -&gt; 'State))&gt; : Microsoft.Bot.Builder.Core.Extensions.IStorage * string * Func&lt;Microsoft.Bot.Builder.ITurnContext, string&gt; * Microsoft.Bot.Builder.Core.Extensions.StateSettings -&gt; Microsoft.Bot.Builder.Core.Extensions.BotState&lt;'State (requires 'State : null and 'State : (new : unit -&gt; 'State))&gt;" Usage="new Microsoft.Bot.Builder.Core.Extensions.BotState&lt;'State (requires 'State : null and 'State : (new : unit -&gt; 'State))&gt; (storage, propertyName, keyDelegate, settings)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder.Core.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.46</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="storage" Type="Microsoft.Bot.Builder.Core.Extensions.IStorage" />
        <Parameter Name="propertyName" Type="System.String" />
        <Parameter Name="keyDelegate" Type="System.Func&lt;Microsoft.Bot.Builder.ITurnContext,System.String&gt;" />
        <Parameter Name="settings" Type="Microsoft.Bot.Builder.Core.Extensions.StateSettings" />
      </Parameters>
      <Docs>
        <param name="storage">The storage provider to use.</param>
        <param name="propertyName">To be added.</param>
        <param name="keyDelegate">To be added.</param>
        <param name="settings">The state persistance options to use.</param>
        <summary>
            Creates a new <see cref="T:Microsoft.Bot.Builder.Core.Extensions.BotState`1" /> middleware object.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnTurn">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task OnTurn (Microsoft.Bot.Builder.ITurnContext context, Microsoft.Bot.Builder.MiddlewareSet.NextDelegate next);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task OnTurn(class Microsoft.Bot.Builder.ITurnContext context, class Microsoft.Bot.Builder.MiddlewareSet/NextDelegate next) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.Core.Extensions.BotState`1.OnTurn(Microsoft.Bot.Builder.ITurnContext,Microsoft.Bot.Builder.MiddlewareSet.NextDelegate)" />
      <MemberSignature Language="VB.NET" Value="Public Function OnTurn (context As ITurnContext, next As MiddlewareSet.NextDelegate) As Task" />
      <MemberSignature Language="F#" Value="abstract member OnTurn : Microsoft.Bot.Builder.ITurnContext * Microsoft.Bot.Builder.MiddlewareSet.NextDelegate -&gt; System.Threading.Tasks.Task&#xA;override this.OnTurn : Microsoft.Bot.Builder.ITurnContext * Microsoft.Bot.Builder.MiddlewareSet.NextDelegate -&gt; System.Threading.Tasks.Task" Usage="botState.OnTurn (context, next)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Bot.Builder.IMiddleware.OnTurn(Microsoft.Bot.Builder.ITurnContext,Microsoft.Bot.Builder.MiddlewareSet.NextDelegate)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder.Core.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.46</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Microsoft.Bot.Builder.ITurnContext" />
        <Parameter Name="next" Type="Microsoft.Bot.Builder.MiddlewareSet+NextDelegate" />
      </Parameters>
      <Docs>
        <param name="context">The context object for this turn.</param>
        <param name="next">The delegate to call to continue the bot middleware pipeline.</param>
        <summary>
            Processess an incoming activity.
            </summary>
        <returns>A task that represents the work queued to execute.</returns>
        <remarks>This middleware loads the state object on the leading edge of the middleware pipeline
            and persists the state object on the trailing edge.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;TState&gt; Read (Microsoft.Bot.Builder.ITurnContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;!TState&gt; Read(class Microsoft.Bot.Builder.ITurnContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.Core.Extensions.BotState`1.Read(Microsoft.Bot.Builder.ITurnContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Read (context As ITurnContext) As Task(Of TState)" />
      <MemberSignature Language="F#" Value="abstract member Read : Microsoft.Bot.Builder.ITurnContext -&gt; System.Threading.Tasks.Task&lt;'State (requires 'State : null and 'State : (new : unit -&gt; 'State))&gt;&#xA;override this.Read : Microsoft.Bot.Builder.ITurnContext -&gt; System.Threading.Tasks.Task&lt;'State (requires 'State : null and 'State : (new : unit -&gt; 'State))&gt;" Usage="botState.Read context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder.Core.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.46</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TState&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Microsoft.Bot.Builder.ITurnContext" />
      </Parameters>
      <Docs>
        <param name="context">The context object for this turn.</param>
        <summary>
            Reads state from storage.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadToContextService">
      <MemberSignature Language="C#" Value="protected virtual System.Threading.Tasks.Task ReadToContextService (Microsoft.Bot.Builder.ITurnContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Threading.Tasks.Task ReadToContextService(class Microsoft.Bot.Builder.ITurnContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.Core.Extensions.BotState`1.ReadToContextService(Microsoft.Bot.Builder.ITurnContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function ReadToContextService (context As ITurnContext) As Task" />
      <MemberSignature Language="F#" Value="abstract member ReadToContextService : Microsoft.Bot.Builder.ITurnContext -&gt; System.Threading.Tasks.Task&#xA;override this.ReadToContextService : Microsoft.Bot.Builder.ITurnContext -&gt; System.Threading.Tasks.Task" Usage="botState.ReadToContextService context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder.Core.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.46</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Microsoft.Bot.Builder.ITurnContext" />
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Write (Microsoft.Bot.Builder.ITurnContext context, TState state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Write(class Microsoft.Bot.Builder.ITurnContext context, !TState state) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.Core.Extensions.BotState`1.Write(Microsoft.Bot.Builder.ITurnContext,`0)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Write (context As ITurnContext, state As TState) As Task" />
      <MemberSignature Language="F#" Value="abstract member Write : Microsoft.Bot.Builder.ITurnContext * 'State -&gt; System.Threading.Tasks.Task&#xA;override this.Write : Microsoft.Bot.Builder.ITurnContext * 'State -&gt; System.Threading.Tasks.Task" Usage="botState.Write (context, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder.Core.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.46</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Microsoft.Bot.Builder.ITurnContext" />
        <Parameter Name="state" Type="TState" />
      </Parameters>
      <Docs>
        <param name="context">The context object for this turn.</param>
        <param name="state">The state object.</param>
        <summary>
            Writes state to storage.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteFromContextService">
      <MemberSignature Language="C#" Value="protected virtual System.Threading.Tasks.Task WriteFromContextService (Microsoft.Bot.Builder.ITurnContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Threading.Tasks.Task WriteFromContextService(class Microsoft.Bot.Builder.ITurnContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.Core.Extensions.BotState`1.WriteFromContextService(Microsoft.Bot.Builder.ITurnContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function WriteFromContextService (context As ITurnContext) As Task" />
      <MemberSignature Language="F#" Value="abstract member WriteFromContextService : Microsoft.Bot.Builder.ITurnContext -&gt; System.Threading.Tasks.Task&#xA;override this.WriteFromContextService : Microsoft.Bot.Builder.ITurnContext -&gt; System.Threading.Tasks.Task" Usage="botState.WriteFromContextService context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder.Core.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.46</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Microsoft.Bot.Builder.ITurnContext" />
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>