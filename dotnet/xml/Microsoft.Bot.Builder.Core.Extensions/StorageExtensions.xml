<Type Name="StorageExtensions" FullName="Microsoft.Bot.Builder.Core.Extensions.StorageExtensions">
  <TypeSignature Language="C#" Value="public static class StorageExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit StorageExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Bot.Builder.Core.Extensions.StorageExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module StorageExtensions" />
  <TypeSignature Language="F#" Value="type StorageExtensions = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Bot.Builder.Core.Extensions</AssemblyName>
    <AssemblyVersion>4.0.0.46</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Read&lt;StoreItemT&gt;">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;string,StoreItemT&gt;&gt;&gt; Read&lt;StoreItemT&gt; (this Microsoft.Bot.Builder.Core.Extensions.IStorage storage, params string[] keys) where StoreItemT : class;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;string, !!StoreItemT&gt;&gt;&gt; Read&lt;class StoreItemT&gt;(class Microsoft.Bot.Builder.Core.Extensions.IStorage storage, string[] keys) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.Core.Extensions.StorageExtensions.Read``1(Microsoft.Bot.Builder.Core.Extensions.IStorage,System.String[])" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Read(Of StoreItemT As Class) (storage As IStorage, ParamArray keys As String()) As Task(Of IEnumerable(Of KeyValuePair(Of String, StoreItemT)))" />
      <MemberSignature Language="F#" Value="static member Read : Microsoft.Bot.Builder.Core.Extensions.IStorage * string[] -&gt; System.Threading.Tasks.Task&lt;seq&lt;System.Collections.Generic.KeyValuePair&lt;string, 'StoreItemT&gt;&gt;&gt; (requires 'StoreItemT : null)" Usage="Microsoft.Bot.Builder.Core.Extensions.StorageExtensions.Read (storage, keys)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder.Core.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.46</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.String,StoreItemT&gt;&gt;&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="StoreItemT">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="storage" Type="Microsoft.Bot.Builder.Core.Extensions.IStorage" RefType="this" />
        <Parameter Name="keys" Type="System.String[]">
          <Attributes>
            <Attribute FrameworkAlternate="botbuilder-dotnet-stable">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <typeparam name="StoreItemT"></typeparam>
        <param name="storage"></param>
        <param name="keys"></param>
        <summary>
            Storage extension to Read as strong typed StoreItem objects
            </summary>
        <returns />
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>