<Type Name="IStorage" FullName="Microsoft.Bot.Builder.Core.Extensions.IStorage">
  <TypeSignature Language="C#" Value="public interface IStorage" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IStorage" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Bot.Builder.Core.Extensions.IStorage" />
  <TypeSignature Language="VB.NET" Value="Public Interface IStorage" />
  <TypeSignature Language="F#" Value="type IStorage = interface" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Bot.Builder.Core.Extensions</AssemblyName>
    <AssemblyVersion>4.0.0.46</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task Delete (params string[] keys);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Delete(string[] keys) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.Core.Extensions.IStorage.Delete(System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Function Delete (ParamArray keys As String()) As Task" />
      <MemberSignature Language="F#" Value="abstract member Delete : string[] -&gt; System.Threading.Tasks.Task" Usage="iStorage.Delete keys" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder.Core.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.46</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keys" Type="System.String[]">
          <Attributes>
            <Attribute FrameworkAlternate="botbuilder-dotnet-stable">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="keys">keys of the storeItems to delete</param>
        <summary>
            Delete StoreItems from storage
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;string,object&gt;&gt;&gt; Read (params string[] keys);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;string, object&gt;&gt;&gt; Read(string[] keys) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.Core.Extensions.IStorage.Read(System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Function Read (ParamArray keys As String()) As Task(Of IEnumerable(Of KeyValuePair(Of String, Object)))" />
      <MemberSignature Language="F#" Value="abstract member Read : string[] -&gt; System.Threading.Tasks.Task&lt;seq&lt;System.Collections.Generic.KeyValuePair&lt;string, obj&gt;&gt;&gt;" Usage="iStorage.Read keys" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder.Core.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.46</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Object&gt;&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keys" Type="System.String[]">
          <Attributes>
            <Attribute FrameworkAlternate="botbuilder-dotnet-stable">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="keys">keys of the storeItems to read</param>
        <summary>
            Read StoreItems from storage
            </summary>
        <returns>StoreItem dictionary</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task Write (System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;string,object&gt;&gt; changes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Write(class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;string, object&gt;&gt; changes) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.Core.Extensions.IStorage.Write(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Object}})" />
      <MemberSignature Language="VB.NET" Value="Public Function Write (changes As IEnumerable(Of KeyValuePair(Of String, Object))) As Task" />
      <MemberSignature Language="F#" Value="abstract member Write : seq&lt;System.Collections.Generic.KeyValuePair&lt;string, obj&gt;&gt; -&gt; System.Threading.Tasks.Task" Usage="iStorage.Write changes" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder.Core.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.46</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="changes" Type="System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Object&gt;&gt;" />
      </Parameters>
      <Docs>
        <param name="changes"></param>
        <summary>
            Write StoreItems to storage
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>