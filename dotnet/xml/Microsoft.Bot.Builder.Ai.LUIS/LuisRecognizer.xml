<Type Name="LuisRecognizer" FullName="Microsoft.Bot.Builder.Ai.LUIS.LuisRecognizer">
  <TypeSignature Language="C#" Value="public class LuisRecognizer : Microsoft.Bot.Builder.Core.Extensions.IRecognizer" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit LuisRecognizer extends System.Object implements class Microsoft.Bot.Builder.Core.Extensions.IRecognizer" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Bot.Builder.Ai.LUIS.LuisRecognizer" />
  <TypeSignature Language="VB.NET" Value="Public Class LuisRecognizer&#xA;Implements IRecognizer" />
  <TypeSignature Language="F#" Value="type LuisRecognizer = class&#xA;    interface IRecognizer" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Bot.Builder.Ai.LUIS</AssemblyName>
    <AssemblyVersion>4.0.0.46</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.Bot.Builder.Core.Extensions.IRecognizer</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
            A LUIS based implementation of IRecognizer.
            </summary>
    <remarks>To be added.</remarks>
    <inheritdoc />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LuisRecognizer (Microsoft.Cognitive.LUIS.ILuisModel luisModel, Microsoft.Bot.Builder.Ai.LUIS.ILuisRecognizerOptions luisRecognizerOptions = null, Microsoft.Cognitive.LUIS.ILuisOptions options = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.Cognitive.LUIS.ILuisModel luisModel, class Microsoft.Bot.Builder.Ai.LUIS.ILuisRecognizerOptions luisRecognizerOptions, class Microsoft.Cognitive.LUIS.ILuisOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.Ai.LUIS.LuisRecognizer.#ctor(Microsoft.Cognitive.LUIS.ILuisModel,Microsoft.Bot.Builder.Ai.LUIS.ILuisRecognizerOptions,Microsoft.Cognitive.LUIS.ILuisOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (luisModel As ILuisModel, Optional luisRecognizerOptions As ILuisRecognizerOptions = null, Optional options As ILuisOptions = null)" />
      <MemberSignature Language="F#" Value="new Microsoft.Bot.Builder.Ai.LUIS.LuisRecognizer : Microsoft.Cognitive.LUIS.ILuisModel * Microsoft.Bot.Builder.Ai.LUIS.ILuisRecognizerOptions * Microsoft.Cognitive.LUIS.ILuisOptions -&gt; Microsoft.Bot.Builder.Ai.LUIS.LuisRecognizer" Usage="new Microsoft.Bot.Builder.Ai.LUIS.LuisRecognizer (luisModel, luisRecognizerOptions, options)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder.Ai.LUIS</AssemblyName>
        <AssemblyVersion>4.0.0.46</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="luisModel" Type="Microsoft.Cognitive.LUIS.ILuisModel" />
        <Parameter Name="luisRecognizerOptions" Type="Microsoft.Bot.Builder.Ai.LUIS.ILuisRecognizerOptions" />
        <Parameter Name="options" Type="Microsoft.Cognitive.LUIS.ILuisOptions" />
      </Parameters>
      <Docs>
        <param name="luisModel">The LUIS model to use to recognize text.</param>
        <param name="luisRecognizerOptions">The LUIS recognizer options to use.</param>
        <param name="options">The LUIS request options to use.</param>
        <summary> 
            Creates a new <see cref="T:Microsoft.Bot.Builder.Ai.LUIS.LuisRecognizer" /> object. 
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Recognize">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Bot.Builder.Core.Extensions.RecognizerResult&gt; Recognize (string utterance, System.Threading.CancellationToken ct);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Bot.Builder.Core.Extensions.RecognizerResult&gt; Recognize(string utterance, valuetype System.Threading.CancellationToken ct) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.Ai.LUIS.LuisRecognizer.Recognize(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function Recognize (utterance As String, ct As CancellationToken) As Task(Of RecognizerResult)" />
      <MemberSignature Language="F#" Value="abstract member Recognize : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Bot.Builder.Core.Extensions.RecognizerResult&gt;&#xA;override this.Recognize : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Bot.Builder.Core.Extensions.RecognizerResult&gt;" Usage="luisRecognizer.Recognize (utterance, ct)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Bot.Builder.Core.Extensions.IRecognizer.Recognize(System.String,System.Threading.CancellationToken)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder.Ai.LUIS</AssemblyName>
        <AssemblyVersion>4.0.0.46</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Bot.Builder.Core.Extensions.RecognizerResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="utterance" Type="System.String" />
        <Parameter Name="ct" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="utterance">To be added.</param>
        <param name="ct">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="Recognize&lt;T&gt;">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;T&gt; Recognize&lt;T&gt; (string utterance, System.Threading.CancellationToken ct) where T : Microsoft.Bot.Builder.Core.Extensions.IRecognizerConvertnew();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;!!T&gt; Recognize&lt;.ctor (class Microsoft.Bot.Builder.Core.Extensions.IRecognizerConvert) T&gt;(string utterance, valuetype System.Threading.CancellationToken ct) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.Ai.LUIS.LuisRecognizer.Recognize``1(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function Recognize(Of T As {IRecognizerConvertNew}) (utterance As String, ct As CancellationToken) As Task(Of T)" />
      <MemberSignature Language="F#" Value="abstract member Recognize : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;'T (requires 'T :&gt; Microsoft.Bot.Builder.Core.Extensions.IRecognizerConvert and 'T : (new : unit -&gt; 'T))&gt; (requires 'T :&gt; Microsoft.Bot.Builder.Core.Extensions.IRecognizerConvert and 'T : (new : unit -&gt; 'T))&#xA;override this.Recognize : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;'T (requires 'T :&gt; Microsoft.Bot.Builder.Core.Extensions.IRecognizerConvert and 'T : (new : unit -&gt; 'T))&gt; (requires 'T :&gt; Microsoft.Bot.Builder.Core.Extensions.IRecognizerConvert and 'T : (new : unit -&gt; 'T))" Usage="luisRecognizer.Recognize (utterance, ct)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Bot.Builder.Core.Extensions.IRecognizer.Recognize``1(System.String,System.Threading.CancellationToken)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder.Ai.LUIS</AssemblyName>
        <AssemblyVersion>4.0.0.46</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <InterfaceName>Microsoft.Bot.Builder.Core.Extensions.IRecognizerConvert</InterfaceName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="utterance" Type="System.String" />
        <Parameter Name="ct" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="utterance">To be added.</param>
        <param name="ct">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
  </Members>
</Type>