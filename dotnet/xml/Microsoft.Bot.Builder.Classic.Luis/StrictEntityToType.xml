<Type Name="StrictEntityToType" FullName="Microsoft.Bot.Builder.Classic.Luis.StrictEntityToType">
  <TypeSignature Language="C#" Value="public sealed class StrictEntityToType : Microsoft.Bot.Builder.Classic.Luis.IEntityToType" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit StrictEntityToType extends System.Object implements class Microsoft.Bot.Builder.Classic.Luis.IEntityToType" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Bot.Builder.Classic.Luis.StrictEntityToType" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class StrictEntityToType&#xA;Implements IEntityToType" />
  <TypeSignature Language="F#" Value="type StrictEntityToType = class&#xA;    interface IEntityToType" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Bot.Builder.Classic</AssemblyName>
    <AssemblyVersion>4.0.0.46</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.Bot.Builder.Classic.Luis.IEntityToType</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StrictEntityToType (Microsoft.Bot.Builder.Classic.Luis.IResolutionParser parser, Microsoft.Bot.Builder.Classic.Luis.ICalendarPlus calendar);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.Bot.Builder.Classic.Luis.IResolutionParser parser, class Microsoft.Bot.Builder.Classic.Luis.ICalendarPlus calendar) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.Classic.Luis.StrictEntityToType.#ctor(Microsoft.Bot.Builder.Classic.Luis.IResolutionParser,Microsoft.Bot.Builder.Classic.Luis.ICalendarPlus)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (parser As IResolutionParser, calendar As ICalendarPlus)" />
      <MemberSignature Language="F#" Value="new Microsoft.Bot.Builder.Classic.Luis.StrictEntityToType : Microsoft.Bot.Builder.Classic.Luis.IResolutionParser * Microsoft.Bot.Builder.Classic.Luis.ICalendarPlus -&gt; Microsoft.Bot.Builder.Classic.Luis.StrictEntityToType" Usage="new Microsoft.Bot.Builder.Classic.Luis.StrictEntityToType (parser, calendar)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder.Classic</AssemblyName>
        <AssemblyVersion>4.0.0.46</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="parser" Type="Microsoft.Bot.Builder.Classic.Luis.IResolutionParser" />
        <Parameter Name="calendar" Type="Microsoft.Bot.Builder.Classic.Luis.ICalendarPlus" />
      </Parameters>
      <Docs>
        <param name="parser">To be added.</param>
        <param name="calendar">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Interpret">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IEnumerable&lt;Microsoft.Bot.Builder.Classic.Internals.Fibers.Range&lt;DateTime&gt;&gt; Interpret (Microsoft.Bot.Builder.Classic.Luis.BuiltIn.DateTime.DateTimeResolution resolution, DateTime now, System.Globalization.Calendar calendar, System.Globalization.CalendarWeekRule rule, DayOfWeek firstDayOfWeek, Func&lt;Microsoft.Bot.Builder.Classic.Luis.BuiltIn.DateTime.DayPart,int&gt; HourFor);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IEnumerable`1&lt;valuetype Microsoft.Bot.Builder.Classic.Internals.Fibers.Range`1&lt;valuetype System.DateTime&gt;&gt; Interpret(class Microsoft.Bot.Builder.Classic.Luis.BuiltIn/DateTime/DateTimeResolution resolution, valuetype System.DateTime now, class System.Globalization.Calendar calendar, valuetype System.Globalization.CalendarWeekRule rule, valuetype System.DayOfWeek firstDayOfWeek, class System.Func`2&lt;valuetype Microsoft.Bot.Builder.Classic.Luis.BuiltIn/DateTime/DayPart, int32&gt; HourFor) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.Classic.Luis.StrictEntityToType.Interpret(Microsoft.Bot.Builder.Classic.Luis.BuiltIn.DateTime.DateTimeResolution,System.DateTime,System.Globalization.Calendar,System.Globalization.CalendarWeekRule,System.DayOfWeek,System.Func{Microsoft.Bot.Builder.Classic.Luis.BuiltIn.DateTime.DayPart,System.Int32})" />
      <MemberSignature Language="F#" Value="static member Interpret : Microsoft.Bot.Builder.Classic.Luis.BuiltIn.DateTime.DateTimeResolution * DateTime * System.Globalization.Calendar * System.Globalization.CalendarWeekRule * DayOfWeek * Func&lt;Microsoft.Bot.Builder.Classic.Luis.BuiltIn.DateTime.DayPart, int&gt; -&gt; seq&lt;Microsoft.Bot.Builder.Classic.Internals.Fibers.Range&lt;DateTime&gt;&gt;" Usage="Microsoft.Bot.Builder.Classic.Luis.StrictEntityToType.Interpret (resolution, now, calendar, rule, firstDayOfWeek, HourFor)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder.Classic</AssemblyName>
        <AssemblyVersion>4.0.0.46</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="botbuilder-dotnet-preview">
          <AttributeName>System.Runtime.CompilerServices.IteratorStateMachine(typeof(Microsoft.Bot.Builder.Classic.Luis.StrictEntityToType/&lt;Interpret&gt;d__5))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;Microsoft.Bot.Builder.Classic.Internals.Fibers.Range&lt;System.DateTime&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resolution" Type="Microsoft.Bot.Builder.Classic.Luis.BuiltIn+DateTime+DateTimeResolution" />
        <Parameter Name="now" Type="System.DateTime" />
        <Parameter Name="calendar" Type="System.Globalization.Calendar" />
        <Parameter Name="rule" Type="System.Globalization.CalendarWeekRule" />
        <Parameter Name="firstDayOfWeek" Type="System.DayOfWeek" />
        <Parameter Name="HourFor" Type="System.Func&lt;Microsoft.Bot.Builder.Classic.Luis.BuiltIn+DateTime+DayPart,System.Int32&gt;" />
      </Parameters>
      <Docs>
        <param name="resolution">To be added.</param>
        <param name="now">To be added.</param>
        <param name="calendar">To be added.</param>
        <param name="rule">To be added.</param>
        <param name="firstDayOfWeek">To be added.</param>
        <param name="HourFor">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Microsoft.Bot.Builder.Classic.Luis.IEntityToType.TryMapToDateRanges">
      <MemberSignature Language="C#" Value="bool IEntityToType.TryMapToDateRanges (DateTime now, System.Collections.Generic.IEnumerable&lt;Microsoft.Bot.Builder.Classic.Luis.Models.EntityRecommendation&gt; entities, out System.Collections.Generic.IEnumerable&lt;Microsoft.Bot.Builder.Classic.Internals.Fibers.Range&lt;DateTime&gt;&gt; ranges);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool Microsoft.Bot.Builder.Classic.Luis.IEntityToType.TryMapToDateRanges(valuetype System.DateTime now, class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Bot.Builder.Classic.Luis.Models.EntityRecommendation&gt; entities, [out] class System.Collections.Generic.IEnumerable`1&lt;valuetype Microsoft.Bot.Builder.Classic.Internals.Fibers.Range`1&lt;valuetype System.DateTime&gt;&gt;&amp; ranges) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.Classic.Luis.StrictEntityToType.Microsoft#Bot#Builder#Classic#Luis#IEntityToType#TryMapToDateRanges(System.DateTime,System.Collections.Generic.IEnumerable{Microsoft.Bot.Builder.Classic.Luis.Models.EntityRecommendation},System.Collections.Generic.IEnumerable{Microsoft.Bot.Builder.Classic.Internals.Fibers.Range{System.DateTime}}@)" />
      <MemberSignature Language="VB.NET" Value="Function TryMapToDateRanges (now As DateTime, entities As IEnumerable(Of EntityRecommendation), ByRef ranges As IEnumerable(Of Range(Of DateTime))) As Boolean Implements IEntityToType.TryMapToDateRanges" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Bot.Builder.Classic.Luis.IEntityToType.TryMapToDateRanges(System.DateTime,System.Collections.Generic.IEnumerable{Microsoft.Bot.Builder.Classic.Luis.Models.EntityRecommendation},System.Collections.Generic.IEnumerable{Microsoft.Bot.Builder.Classic.Internals.Fibers.Range{System.DateTime}}@)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder.Classic</AssemblyName>
        <AssemblyVersion>4.0.0.46</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="now" Type="System.DateTime" />
        <Parameter Name="entities" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Bot.Builder.Classic.Luis.Models.EntityRecommendation&gt;" />
        <Parameter Name="ranges" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Bot.Builder.Classic.Internals.Fibers.Range&lt;System.DateTime&gt;&gt;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="now">To be added.</param>
        <param name="entities">To be added.</param>
        <param name="ranges">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Microsoft.Bot.Builder.Classic.Luis.IEntityToType.TryMapToTimeSpan">
      <MemberSignature Language="C#" Value="bool IEntityToType.TryMapToTimeSpan (DateTime now, System.Collections.Generic.IEnumerable&lt;Microsoft.Bot.Builder.Classic.Luis.Models.EntityRecommendation&gt; entities, out TimeSpan span);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool Microsoft.Bot.Builder.Classic.Luis.IEntityToType.TryMapToTimeSpan(valuetype System.DateTime now, class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Bot.Builder.Classic.Luis.Models.EntityRecommendation&gt; entities, [out] valuetype System.TimeSpan&amp; span) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.Classic.Luis.StrictEntityToType.Microsoft#Bot#Builder#Classic#Luis#IEntityToType#TryMapToTimeSpan(System.DateTime,System.Collections.Generic.IEnumerable{Microsoft.Bot.Builder.Classic.Luis.Models.EntityRecommendation},System.TimeSpan@)" />
      <MemberSignature Language="VB.NET" Value="Function TryMapToTimeSpan (now As DateTime, entities As IEnumerable(Of EntityRecommendation), ByRef span As TimeSpan) As Boolean Implements IEntityToType.TryMapToTimeSpan" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Bot.Builder.Classic.Luis.IEntityToType.TryMapToTimeSpan(System.DateTime,System.Collections.Generic.IEnumerable{Microsoft.Bot.Builder.Classic.Luis.Models.EntityRecommendation},System.TimeSpan@)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder.Classic</AssemblyName>
        <AssemblyVersion>4.0.0.46</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="now" Type="System.DateTime" />
        <Parameter Name="entities" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Bot.Builder.Classic.Luis.Models.EntityRecommendation&gt;" />
        <Parameter Name="span" Type="System.TimeSpan" RefType="out" />
      </Parameters>
      <Docs>
        <param name="now">To be added.</param>
        <param name="entities">To be added.</param>
        <param name="span">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>