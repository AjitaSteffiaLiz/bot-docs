<Type Name="JwtTokenExtractor" FullName="Microsoft.Bot.Connector.Authentication.JwtTokenExtractor">
  <TypeSignature Language="C#" Value="public class JwtTokenExtractor" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit JwtTokenExtractor extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Bot.Connector.Authentication.JwtTokenExtractor" />
  <TypeSignature Language="VB.NET" Value="Public Class JwtTokenExtractor" />
  <TypeSignature Language="F#" Value="type JwtTokenExtractor = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Bot.Connector</AssemblyName>
    <AssemblyVersion>4.0.0.46</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public JwtTokenExtractor (System.Net.Http.HttpClient httpClient, Microsoft.IdentityModel.Tokens.TokenValidationParameters tokenValidationParameters, string metadataUrl, string[] allowedSigningAlgorithms, Microsoft.Bot.Connector.Authentication.JwtTokenExtractor.EndorsementsValidator validator);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Net.Http.HttpClient httpClient, class Microsoft.IdentityModel.Tokens.TokenValidationParameters tokenValidationParameters, string metadataUrl, string[] allowedSigningAlgorithms, class Microsoft.Bot.Connector.Authentication.JwtTokenExtractor/EndorsementsValidator validator) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Connector.Authentication.JwtTokenExtractor.#ctor(System.Net.Http.HttpClient,Microsoft.IdentityModel.Tokens.TokenValidationParameters,System.String,System.String[],Microsoft.Bot.Connector.Authentication.JwtTokenExtractor.EndorsementsValidator)" />
      <MemberSignature Language="F#" Value="new Microsoft.Bot.Connector.Authentication.JwtTokenExtractor : System.Net.Http.HttpClient * Microsoft.IdentityModel.Tokens.TokenValidationParameters * string * string[] * Microsoft.Bot.Connector.Authentication.JwtTokenExtractor.EndorsementsValidator -&gt; Microsoft.Bot.Connector.Authentication.JwtTokenExtractor" Usage="new Microsoft.Bot.Connector.Authentication.JwtTokenExtractor (httpClient, tokenValidationParameters, metadataUrl, allowedSigningAlgorithms, validator)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Connector</AssemblyName>
        <AssemblyVersion>4.0.0.46</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="httpClient" Type="System.Net.Http.HttpClient" />
        <Parameter Name="tokenValidationParameters" Type="Microsoft.IdentityModel.Tokens.TokenValidationParameters" />
        <Parameter Name="metadataUrl" Type="System.String" />
        <Parameter Name="allowedSigningAlgorithms" Type="System.String[]" />
        <Parameter Name="validator" Type="Microsoft.Bot.Connector.Authentication.JwtTokenExtractor+EndorsementsValidator" />
      </Parameters>
      <Docs>
        <param name="httpClient">As part of validating JWT Tokens, endorsements need to be feteched from
            sources specified by the relevant security URLs. This HttpClient is used to allow for resource
            pooling around those retrievals. As those resources require TLS sharing the HttpClient is 
            important to overall perfomance.</param>
        <param name="tokenValidationParameters"></param>
        <param name="metadataUrl"></param>
        <param name="allowedSigningAlgorithms"></param>
        <param name="validator"></param>
        <summary>
            Extracts relevant data from JWT Tokens
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExtractBearerTokenFromAuthHeader">
      <MemberSignature Language="C#" Value="public static string ExtractBearerTokenFromAuthHeader (string authorizationHeader);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ExtractBearerTokenFromAuthHeader(string authorizationHeader) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Connector.Authentication.JwtTokenExtractor.ExtractBearerTokenFromAuthHeader(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ExtractBearerTokenFromAuthHeader (authorizationHeader As String) As String" />
      <MemberSignature Language="F#" Value="static member ExtractBearerTokenFromAuthHeader : string -&gt; string" Usage="Microsoft.Bot.Connector.Authentication.JwtTokenExtractor.ExtractBearerTokenFromAuthHeader authorizationHeader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Connector</AssemblyName>
        <AssemblyVersion>4.0.0.46</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="authorizationHeader" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="authorizationHeader">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetIdentityAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Security.Claims.ClaimsIdentity&gt; GetIdentityAsync (System.Net.Http.HttpRequestMessage request);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Security.Claims.ClaimsIdentity&gt; GetIdentityAsync(class System.Net.Http.HttpRequestMessage request) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Connector.Authentication.JwtTokenExtractor.GetIdentityAsync(System.Net.Http.HttpRequestMessage)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetIdentityAsync (request As HttpRequestMessage) As Task(Of ClaimsIdentity)" />
      <MemberSignature Language="F#" Value="member this.GetIdentityAsync : System.Net.Http.HttpRequestMessage -&gt; System.Threading.Tasks.Task&lt;System.Security.Claims.ClaimsIdentity&gt;" Usage="jwtTokenExtractor.GetIdentityAsync request" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Connector</AssemblyName>
        <AssemblyVersion>4.0.0.46</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Security.Claims.ClaimsIdentity&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.Net.Http.HttpRequestMessage" />
      </Parameters>
      <Docs>
        <param name="request">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetIdentityAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Security.Claims.ClaimsIdentity&gt; GetIdentityAsync (string authorizationHeader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Security.Claims.ClaimsIdentity&gt; GetIdentityAsync(string authorizationHeader) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Connector.Authentication.JwtTokenExtractor.GetIdentityAsync(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetIdentityAsync (authorizationHeader As String) As Task(Of ClaimsIdentity)" />
      <MemberSignature Language="F#" Value="member this.GetIdentityAsync : string -&gt; System.Threading.Tasks.Task&lt;System.Security.Claims.ClaimsIdentity&gt;" Usage="jwtTokenExtractor.GetIdentityAsync authorizationHeader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Connector</AssemblyName>
        <AssemblyVersion>4.0.0.46</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Security.Claims.ClaimsIdentity&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="authorizationHeader" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="authorizationHeader">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetIdentityAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Security.Claims.ClaimsIdentity&gt; GetIdentityAsync (string scheme, string parameter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Security.Claims.ClaimsIdentity&gt; GetIdentityAsync(string scheme, string parameter) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Connector.Authentication.JwtTokenExtractor.GetIdentityAsync(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetIdentityAsync (scheme As String, parameter As String) As Task(Of ClaimsIdentity)" />
      <MemberSignature Language="F#" Value="member this.GetIdentityAsync : string * string -&gt; System.Threading.Tasks.Task&lt;System.Security.Claims.ClaimsIdentity&gt;" Usage="jwtTokenExtractor.GetIdentityAsync (scheme, parameter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Connector</AssemblyName>
        <AssemblyVersion>4.0.0.46</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Security.Claims.ClaimsIdentity&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scheme" Type="System.String" />
        <Parameter Name="parameter" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="scheme">To be added.</param>
        <param name="parameter">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>